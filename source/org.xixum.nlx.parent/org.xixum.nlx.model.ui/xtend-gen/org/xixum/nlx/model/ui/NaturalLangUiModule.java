/**
 * generated by Xtext 2.16.0
 */
package org.xixum.nlx.model.ui;

import com.google.inject.Binder;
import com.google.inject.binder.LinkedBindingBuilder;
import com.google.inject.name.Names;
import org.eclipse.emf.common.notify.AdapterFactory;
import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
import org.eclipse.jface.text.rules.ITokenScanner;
import org.eclipse.ui.plugin.AbstractUIPlugin;
import org.eclipse.ui.views.contentoutline.IContentOutlinePage;
import org.eclipse.ui.views.properties.IPropertySourceProvider;
import org.eclipse.xtend.lib.annotations.FinalFieldsConstructor;
import org.eclipse.xtext.builder.debug.IBuildLogger;
import org.eclipse.xtext.ide.editor.syntaxcoloring.DefaultAntlrTokenToAttributeIdMapper;
import org.eclipse.xtext.ui.codetemplates.ui.highlighting.TokenToAttributeMapper;
import org.eclipse.xtext.ui.editor.embedded.EmbeddedEditorFactory;
import org.eclipse.xtext.ui.editor.hover.AnnotationWithQuickFixesHover;
import org.eclipse.xtext.ui.editor.model.TerminalsTokenTypeToPartitionMapper;
import org.eclipse.xtext.ui.editor.model.XtextDocument;
import org.eclipse.xtext.ui.editor.model.XtextDocumentProvider;
import org.eclipse.xtext.ui.editor.outline.actions.IOutlineContribution;
import org.eclipse.xtext.ui.editor.outline.actions.OutlineWithEditorLinker;
import org.eclipse.xtext.ui.editor.quickfix.XtextQuickAssistProcessor;
import org.eclipse.xtext.ui.editor.syntaxcoloring.IHighlightingConfiguration;
import org.xixum.nlx.dictionary.DictionaryAccess;
import org.xixum.nlx.dictionary.IDictionaryAccess;
import org.xixum.nlx.dictionary.util.LogUtils;
import org.xixum.nlx.model.ui.editor.NlxBuildConsole;
import org.xixum.nlx.model.ui.editor.NlxEObjectNodeAdapterFactory;
import org.xixum.nlx.model.ui.editor.embedded.NlxBuilder;
import org.xixum.nlx.model.ui.editor.hover.NlxAnnotationWithQuickFixesHover;
import org.xixum.nlx.model.ui.editor.model.NlxDocument;
import org.xixum.nlx.model.ui.editor.model.NlxDocumentProvider;
import org.xixum.nlx.model.ui.editor.property.NlxLinkWithEditorOutlineContribution;
import org.xixum.nlx.model.ui.editor.property.NlxOutlineWithEditorLinker;
import org.xixum.nlx.model.ui.highlighting.NaturalLangHighlightingConfiguration;
import org.xixum.nlx.model.ui.highlighting.NlxAntlrTokenToAttributeIdMapper;
import org.xixum.nlx.model.ui.highlighting.NlxTerminalsTokenTypeToPartitionMapper;
import org.xixum.nlx.model.ui.highlighting.NlxTokenScanner;
import org.xixum.nlx.model.ui.highlighting.NlxTokenToAttributeMapper;
import org.xixum.nlx.model.ui.outline.NlxOutlinePage;
import org.xixum.nlx.naturalLang.provider.NaturalLangItemProviderAdapterFactory;
import org.xixum.nlx.naturalLang.util.NaturalLangAdapterFactory;

/**
 * Use this class to register components to be used within the Eclipse IDE.
 */
@FinalFieldsConstructor
@SuppressWarnings("restriction")
public class NaturalLangUiModule extends AbstractNaturalLangUiModule {
  public Class<? extends TokenToAttributeMapper> bindTokenToAttributeMapper() {
    return NlxTokenToAttributeMapper.class;
  }

  public Class<? extends TerminalsTokenTypeToPartitionMapper> bindTerminalsTokenTypeToPartitionMapper() {
    return NlxTerminalsTokenTypeToPartitionMapper.class;
  }

  public Class<? extends IHighlightingConfiguration> bindIHighlightingConfiguration() {
    return NaturalLangHighlightingConfiguration.class;
  }

  public Class<? extends DefaultAntlrTokenToAttributeIdMapper> bindDefaultAntlrTokenToAttributeIdMapper() {
    return NlxAntlrTokenToAttributeIdMapper.class;
  }

  public Class<? extends IPropertySourceProvider> bindIPropertySourceProvider() {
    return NlxEObjectNodeAdapterFactory.class;
  }

  public void configureNaturalLangItemProviderAdapterFactory(final Binder binder) {
    ComposedAdapterFactory eObjectAdapterFactory = new ComposedAdapterFactory(ComposedAdapterFactory.Descriptor.Registry.INSTANCE);
    NaturalLangItemProviderAdapterFactory _naturalLangItemProviderAdapterFactory = new NaturalLangItemProviderAdapterFactory();
    eObjectAdapterFactory.addAdapterFactory(_naturalLangItemProviderAdapterFactory);
    binder.<AdapterFactory>bind(AdapterFactory.class).annotatedWith(Names.named("EObjectAdapterFactory")).toInstance(eObjectAdapterFactory);
    LinkedBindingBuilder<AdapterFactory> _annotatedWith = binder.<AdapterFactory>bind(AdapterFactory.class).annotatedWith(Names.named("nlxAdapterFactory"));
    NaturalLangAdapterFactory _naturalLangAdapterFactory = new NaturalLangAdapterFactory();
    _annotatedWith.toInstance(_naturalLangAdapterFactory);
  }

  @Override
  public Class<? extends ITokenScanner> bindITokenScanner() {
    return NlxTokenScanner.class;
  }

  public Class<? extends IBuildLogger> bindIBuildLogger() {
    return NlxBuildConsole.Logger.class;
  }

  public Class<? extends LogUtils> bindLogUtils() {
    return LogUtils.class;
  }

  public Class<? extends IDictionaryAccess> bindIDictionaryAccess() {
    return DictionaryAccess.class;
  }

  public Class<? extends EmbeddedEditorFactory.Builder> bindBuilder() {
    return NlxBuilder.class;
  }

  public Class<? extends OutlineWithEditorLinker> bindOutlineWithEditorLinker() {
    return NlxOutlineWithEditorLinker.class;
  }

  public Class<? extends XtextDocumentProvider> bindXtextDocumentProvider() {
    return NlxDocumentProvider.class;
  }

  public Class<? extends XtextDocument> bindXtextDocument() {
    return NlxDocument.class;
  }

  public Class<? extends AnnotationWithQuickFixesHover> bindAnnotationWithQuickFixesHover() {
    return NlxAnnotationWithQuickFixesHover.class;
  }

  public Class<? extends XtextQuickAssistProcessor> bindXtextQuickAssistProcessor() {
    throw new Error("Unresolved compilation problems:"
      + "\nThe method or field NlxQuickAssistProcessor is undefined");
  }

  @Override
  public Class<? extends IContentOutlinePage> bindIContentOutlinePage() {
    return NlxOutlinePage.class;
  }

  @Override
  public void configureToggleLinkWithEditorOutlineContribution(final Binder binder) {
    binder.<IOutlineContribution>bind(IOutlineContribution.class).annotatedWith(IOutlineContribution.LinkWithEditor.class).to(NlxLinkWithEditorOutlineContribution.class);
  }

  public NaturalLangUiModule(final AbstractUIPlugin plugin) {
    throw new Error("Unresolved compilation problems:"
      + "\nThe type NaturalLangUiModule is already defined in NaturalLangUiModule.xtend.");
  }
}
