/*
 * generated by Xtext 2.16.0
 */
package org.xixum.nlx.model.ui

import com.google.inject.Binder
import com.google.inject.name.Names
import org.xixum.nlx.ai.IDbAccess
import org.xixum.nlx.ai.neo4j.Neo4jAccess
import org.xixum.nlx.dictionary.DictionaryAccess
import org.xixum.nlx.dictionary.IDictionaryAccess
import org.xixum.nlx.dictionary.util.LogUtils
import org.xixum.nlx.naturalLang.provider.NaturalLangItemProviderAdapterFactory
import org.xixum.nlx.naturalLang.util.NaturalLangAdapterFactory
import org.xixum.nlx.model.ui.editor.NlxBuildConsole
import org.xixum.nlx.model.ui.editor.NlxEObjectNodeAdapterFactory
import org.xixum.nlx.model.ui.editor.embedded.NlxBuilder
import org.xixum.nlx.model.ui.editor.hover.NlxAnnotationWithQuickFixesHover
import org.xixum.nlx.model.ui.editor.model.NlxDocument
import org.xixum.nlx.model.ui.editor.model.NlxDocumentProvider
import org.xixum.nlx.model.ui.editor.property.NlxLinkWithEditorOutlineContribution
import org.xixum.nlx.model.ui.editor.property.NlxOutlineWithEditorLinker
import org.xixum.nlx.model.ui.highlighting.NaturalLangHighlightingConfiguration
import org.xixum.nlx.model.ui.highlighting.NlxAntlrTokenToAttributeIdMapper
import org.xixum.nlx.model.ui.highlighting.NlxTerminalsTokenTypeToPartitionMapper
import org.xixum.nlx.model.ui.highlighting.NlxTokenScanner
import org.xixum.nlx.model.ui.highlighting.NlxTokenToAttributeMapper
import org.xixum.nlx.ui.quickfix.NlxQuickAssistProcessor
import org.eclipse.emf.common.notify.AdapterFactory
import org.eclipse.emf.edit.provider.ComposedAdapterFactory
import org.eclipse.jface.text.rules.ITokenScanner
import org.eclipse.ui.views.properties.IPropertySourceProvider
import org.eclipse.xtend.lib.annotations.FinalFieldsConstructor
import org.eclipse.xtext.builder.debug.IBuildLogger
import org.eclipse.xtext.ide.editor.syntaxcoloring.DefaultAntlrTokenToAttributeIdMapper
import org.eclipse.xtext.ui.codetemplates.ui.highlighting.TokenToAttributeMapper
import org.eclipse.xtext.ui.editor.embedded.EmbeddedEditorFactory.Builder
import org.eclipse.xtext.ui.editor.hover.AnnotationWithQuickFixesHover
import org.eclipse.xtext.ui.editor.model.TerminalsTokenTypeToPartitionMapper
import org.eclipse.xtext.ui.editor.model.XtextDocument
import org.eclipse.xtext.ui.editor.model.XtextDocumentProvider
import org.eclipse.xtext.ui.editor.outline.actions.IOutlineContribution
import org.eclipse.xtext.ui.editor.outline.actions.OutlineWithEditorLinker
import org.eclipse.xtext.ui.editor.quickfix.XtextQuickAssistProcessor
import org.eclipse.xtext.ui.editor.syntaxcoloring.IHighlightingConfiguration
import org.neo4j.driver.v1.exceptions.ServiceUnavailableException
import com.google.inject.util.Providers
import org.xixum.nlx.view.fxviews.cache.NodeCacheManager
import org.xixum.nlx.view.fxviews.cache.INodeCacheManager
import org.eclipse.ui.views.contentoutline.IContentOutlinePage
import org.eclipse.xtext.ui.editor.outline.impl.OutlinePage
import org.xixum.nlx.model.ui.outline.NlxOutlinePage

/**
 * Use this class to register components to be used within the Eclipse IDE.
 */
@FinalFieldsConstructor
@SuppressWarnings("restriction")
class NaturalLangUiModule extends AbstractNaturalLangUiModule {
	
	def Class<? extends TokenToAttributeMapper> bindTokenToAttributeMapper() {
		return NlxTokenToAttributeMapper;
	}
	def Class<? extends TerminalsTokenTypeToPartitionMapper> bindTerminalsTokenTypeToPartitionMapper() {
		return NlxTerminalsTokenTypeToPartitionMapper;
	}
	def Class<? extends IHighlightingConfiguration> bindIHighlightingConfiguration() {
		return NaturalLangHighlightingConfiguration
	}
	
	def Class<? extends DefaultAntlrTokenToAttributeIdMapper> bindDefaultAntlrTokenToAttributeIdMapper() {
		return NlxAntlrTokenToAttributeIdMapper
	}
	
	def Class<? extends IPropertySourceProvider> bindIPropertySourceProvider() {
		return NlxEObjectNodeAdapterFactory
	}
	
	def configureNaturalLangItemProviderAdapterFactory(Binder binder) {
		var eObjectAdapterFactory = new ComposedAdapterFactory(ComposedAdapterFactory.Descriptor.Registry.INSTANCE);
		eObjectAdapterFactory.addAdapterFactory(new NaturalLangItemProviderAdapterFactory)
		
		binder.bind(AdapterFactory)
			.annotatedWith(Names.named("EObjectAdapterFactory"))
			.toInstance(eObjectAdapterFactory)
		binder.bind(AdapterFactory)
			.annotatedWith(Names.named("nlxAdapterFactory"))
			.toInstance(new NaturalLangAdapterFactory())
			
//		 binder.bind(NlxOutlineWithEditorLinker)
//	        .toProvider(Provider<? extends Outline);
		
			
	}
	
		
	override Class<? extends ITokenScanner> bindITokenScanner() {
		NlxTokenScanner
	}
	
	def Class<? extends IBuildLogger> bindIBuildLogger(){
		NlxBuildConsole.Logger
	}
	
	def Class<? extends LogUtils> bindLogUtils() {
		LogUtils
	}
	
	def Class<? extends IDictionaryAccess> bindIDictionaryAccess(){
		//TODO: Get configurable settings for dbAccess from eclipse.ini or so...
		DictionaryAccess
	}
	
//	def Class<? extends INodeCacheManager> bindINodeCacheManager(){
//		NodeCacheManager
//	}
	
	def Class<? extends Builder> bindBuilder() {
		NlxBuilder
	}

	def Class<? extends OutlineWithEditorLinker> bindOutlineWithEditorLinker() {
		return NlxOutlineWithEditorLinker
	}
	
	def Class<? extends XtextDocumentProvider> bindXtextDocumentProvider() {
		return NlxDocumentProvider
	}
	
	
	def Class<? extends XtextDocument> bindXtextDocument() {
		return NlxDocument
	}
	
	def Class<? extends AnnotationWithQuickFixesHover> bindAnnotationWithQuickFixesHover() {
		NlxAnnotationWithQuickFixesHover
	}	
	
	def Class<? extends XtextQuickAssistProcessor> bindXtextQuickAssistProcessor() {
		NlxQuickAssistProcessor
	}
	
	override Class<? extends IContentOutlinePage> bindIContentOutlinePage() {
		return NlxOutlinePage;
	}
	

	
	override configureToggleLinkWithEditorOutlineContribution(Binder binder) {
		binder.bind(IOutlineContribution).annotatedWith(IOutlineContribution.LinkWithEditor)
				.to(NlxLinkWithEditorOutlineContribution);
	}
	
}