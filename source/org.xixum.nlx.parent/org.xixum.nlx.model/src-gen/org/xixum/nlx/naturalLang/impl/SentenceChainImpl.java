/**
 * generated by Xtext 2.16.0
 */
package org.xixum.nlx.naturalLang.impl;

import org.xixum.nlx.naturalLang.NaturalLangPackage;
import org.xixum.nlx.naturalLang.SentenceChain;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.eclipse.emf.ecore.util.EDataTypeEList;
import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Sentence Chain</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xixum.nlx.naturalLang.impl.SentenceChainImpl#getSentences <em>Sentences</em>}</li>
 *   <li>{@link org.xixum.nlx.naturalLang.impl.SentenceChainImpl#getSeparators <em>Separators</em>}</li>
 *   <li>{@link org.xixum.nlx.naturalLang.impl.SentenceChainImpl#getEndpoint <em>Endpoint</em>}</li>
 * </ul>
 *
 * @generated
 */
public class SentenceChainImpl extends BlockElementImpl implements SentenceChain
{
  /**
   * The cached value of the '{@link #getSentences() <em>Sentences</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSentences()
   * @generated
   * @ordered
   */
  protected EList<EObject> sentences;

  /**
   * The cached value of the '{@link #getSeparators() <em>Separators</em>}' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSeparators()
   * @generated
   * @ordered
   */
  protected EList<String> separators;

  /**
   * The default value of the '{@link #getEndpoint() <em>Endpoint</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getEndpoint()
   * @generated
   * @ordered
   */
  protected static final String ENDPOINT_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getEndpoint() <em>Endpoint</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getEndpoint()
   * @generated
   * @ordered
   */
  protected String endpoint = ENDPOINT_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected SentenceChainImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return NaturalLangPackage.Literals.SENTENCE_CHAIN;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<EObject> getSentences()
  {
    if (sentences == null)
    {
      sentences = new EObjectContainmentEList<EObject>(EObject.class, this, NaturalLangPackage.SENTENCE_CHAIN__SENTENCES);
    }
    return sentences;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<String> getSeparators()
  {
    if (separators == null)
    {
      separators = new EDataTypeEList<String>(String.class, this, NaturalLangPackage.SENTENCE_CHAIN__SEPARATORS);
    }
    return separators;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getEndpoint()
  {
    return endpoint;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setEndpoint(String newEndpoint)
  {
    String oldEndpoint = endpoint;
    endpoint = newEndpoint;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, NaturalLangPackage.SENTENCE_CHAIN__ENDPOINT, oldEndpoint, endpoint));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case NaturalLangPackage.SENTENCE_CHAIN__SENTENCES:
        return ((InternalEList<?>)getSentences()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case NaturalLangPackage.SENTENCE_CHAIN__SENTENCES:
        return getSentences();
      case NaturalLangPackage.SENTENCE_CHAIN__SEPARATORS:
        return getSeparators();
      case NaturalLangPackage.SENTENCE_CHAIN__ENDPOINT:
        return getEndpoint();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case NaturalLangPackage.SENTENCE_CHAIN__SENTENCES:
        getSentences().clear();
        getSentences().addAll((Collection<? extends EObject>)newValue);
        return;
      case NaturalLangPackage.SENTENCE_CHAIN__SEPARATORS:
        getSeparators().clear();
        getSeparators().addAll((Collection<? extends String>)newValue);
        return;
      case NaturalLangPackage.SENTENCE_CHAIN__ENDPOINT:
        setEndpoint((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case NaturalLangPackage.SENTENCE_CHAIN__SENTENCES:
        getSentences().clear();
        return;
      case NaturalLangPackage.SENTENCE_CHAIN__SEPARATORS:
        getSeparators().clear();
        return;
      case NaturalLangPackage.SENTENCE_CHAIN__ENDPOINT:
        setEndpoint(ENDPOINT_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case NaturalLangPackage.SENTENCE_CHAIN__SENTENCES:
        return sentences != null && !sentences.isEmpty();
      case NaturalLangPackage.SENTENCE_CHAIN__SEPARATORS:
        return separators != null && !separators.isEmpty();
      case NaturalLangPackage.SENTENCE_CHAIN__ENDPOINT:
        return ENDPOINT_EDEFAULT == null ? endpoint != null : !ENDPOINT_EDEFAULT.equals(endpoint);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (separators: ");
    result.append(separators);
    result.append(", endpoint: ");
    result.append(endpoint);
    result.append(')');
    return result.toString();
  }

} //SentenceChainImpl