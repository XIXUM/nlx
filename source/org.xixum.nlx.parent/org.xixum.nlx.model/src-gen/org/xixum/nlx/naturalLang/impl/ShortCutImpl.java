/**
 * generated by Xtext 2.16.0
 */
package org.xixum.nlx.naturalLang.impl;

import org.xixum.nlx.naturalLang.NaturalLangPackage;
import org.xixum.nlx.naturalLang.ShortCut;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Short Cut</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xixum.nlx.naturalLang.impl.ShortCutImpl#getShortcut <em>Shortcut</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ShortCutImpl extends NoNElementImpl implements ShortCut
{
  /**
   * The cached value of the '{@link #getShortcut() <em>Shortcut</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getShortcut()
   * @generated
   * @ordered
   */
  protected EObject shortcut;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ShortCutImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return NaturalLangPackage.Literals.SHORT_CUT;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EObject getShortcut()
  {
    return shortcut;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetShortcut(EObject newShortcut, NotificationChain msgs)
  {
    EObject oldShortcut = shortcut;
    shortcut = newShortcut;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, NaturalLangPackage.SHORT_CUT__SHORTCUT, oldShortcut, newShortcut);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setShortcut(EObject newShortcut)
  {
    if (newShortcut != shortcut)
    {
      NotificationChain msgs = null;
      if (shortcut != null)
        msgs = ((InternalEObject)shortcut).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - NaturalLangPackage.SHORT_CUT__SHORTCUT, null, msgs);
      if (newShortcut != null)
        msgs = ((InternalEObject)newShortcut).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - NaturalLangPackage.SHORT_CUT__SHORTCUT, null, msgs);
      msgs = basicSetShortcut(newShortcut, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, NaturalLangPackage.SHORT_CUT__SHORTCUT, newShortcut, newShortcut));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case NaturalLangPackage.SHORT_CUT__SHORTCUT:
        return basicSetShortcut(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case NaturalLangPackage.SHORT_CUT__SHORTCUT:
        return getShortcut();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case NaturalLangPackage.SHORT_CUT__SHORTCUT:
        setShortcut((EObject)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case NaturalLangPackage.SHORT_CUT__SHORTCUT:
        setShortcut((EObject)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case NaturalLangPackage.SHORT_CUT__SHORTCUT:
        return shortcut != null;
    }
    return super.eIsSet(featureID);
  }

} //ShortCutImpl
