/**
 * generated by Xtext 2.16.0
 */
package org.xixum.nlx.naturalLang.impl;

import org.xixum.nlx.naturalLang.ListSentence;
import org.xixum.nlx.naturalLang.NaturalLangPackage;
import org.xixum.nlx.naturalLang.SentenceChainX;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>List Sentence</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xixum.nlx.naturalLang.impl.ListSentenceImpl#getListpoint <em>Listpoint</em>}</li>
 *   <li>{@link org.xixum.nlx.naturalLang.impl.ListSentenceImpl#getSentenceChain <em>Sentence Chain</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ListSentenceImpl extends BlockElementImpl implements ListSentence
{
  /**
   * The default value of the '{@link #getListpoint() <em>Listpoint</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getListpoint()
   * @generated
   * @ordered
   */
  protected static final String LISTPOINT_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getListpoint() <em>Listpoint</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getListpoint()
   * @generated
   * @ordered
   */
  protected String listpoint = LISTPOINT_EDEFAULT;

  /**
   * The cached value of the '{@link #getSentenceChain() <em>Sentence Chain</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSentenceChain()
   * @generated
   * @ordered
   */
  protected SentenceChainX sentenceChain;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ListSentenceImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return NaturalLangPackage.Literals.LIST_SENTENCE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getListpoint()
  {
    return listpoint;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setListpoint(String newListpoint)
  {
    String oldListpoint = listpoint;
    listpoint = newListpoint;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, NaturalLangPackage.LIST_SENTENCE__LISTPOINT, oldListpoint, listpoint));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public SentenceChainX getSentenceChain()
  {
    return sentenceChain;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetSentenceChain(SentenceChainX newSentenceChain, NotificationChain msgs)
  {
    SentenceChainX oldSentenceChain = sentenceChain;
    sentenceChain = newSentenceChain;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, NaturalLangPackage.LIST_SENTENCE__SENTENCE_CHAIN, oldSentenceChain, newSentenceChain);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setSentenceChain(SentenceChainX newSentenceChain)
  {
    if (newSentenceChain != sentenceChain)
    {
      NotificationChain msgs = null;
      if (sentenceChain != null)
        msgs = ((InternalEObject)sentenceChain).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - NaturalLangPackage.LIST_SENTENCE__SENTENCE_CHAIN, null, msgs);
      if (newSentenceChain != null)
        msgs = ((InternalEObject)newSentenceChain).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - NaturalLangPackage.LIST_SENTENCE__SENTENCE_CHAIN, null, msgs);
      msgs = basicSetSentenceChain(newSentenceChain, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, NaturalLangPackage.LIST_SENTENCE__SENTENCE_CHAIN, newSentenceChain, newSentenceChain));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case NaturalLangPackage.LIST_SENTENCE__SENTENCE_CHAIN:
        return basicSetSentenceChain(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case NaturalLangPackage.LIST_SENTENCE__LISTPOINT:
        return getListpoint();
      case NaturalLangPackage.LIST_SENTENCE__SENTENCE_CHAIN:
        return getSentenceChain();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case NaturalLangPackage.LIST_SENTENCE__LISTPOINT:
        setListpoint((String)newValue);
        return;
      case NaturalLangPackage.LIST_SENTENCE__SENTENCE_CHAIN:
        setSentenceChain((SentenceChainX)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case NaturalLangPackage.LIST_SENTENCE__LISTPOINT:
        setListpoint(LISTPOINT_EDEFAULT);
        return;
      case NaturalLangPackage.LIST_SENTENCE__SENTENCE_CHAIN:
        setSentenceChain((SentenceChainX)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case NaturalLangPackage.LIST_SENTENCE__LISTPOINT:
        return LISTPOINT_EDEFAULT == null ? listpoint != null : !LISTPOINT_EDEFAULT.equals(listpoint);
      case NaturalLangPackage.LIST_SENTENCE__SENTENCE_CHAIN:
        return sentenceChain != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (listpoint: ");
    result.append(listpoint);
    result.append(')');
    return result.toString();
  }

} //ListSentenceImpl