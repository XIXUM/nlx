/**
 * generated by Xtext 2.16.0
 */
package org.xixum.nlx.naturalLang.impl;

import org.xixum.nlx.naturalLang.FootNote;
import org.xixum.nlx.naturalLang.NaturalLangPackage;
import org.xixum.nlx.naturalLang.SentenceChain;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Foot Note</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xixum.nlx.naturalLang.impl.FootNoteImpl#getNumber <em>Number</em>}</li>
 *   <li>{@link org.xixum.nlx.naturalLang.impl.FootNoteImpl#getSentenceChain <em>Sentence Chain</em>}</li>
 * </ul>
 *
 * @generated
 */
public class FootNoteImpl extends BlockElementImpl implements FootNote
{
  /**
   * The default value of the '{@link #getNumber() <em>Number</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getNumber()
   * @generated
   * @ordered
   */
  protected static final String NUMBER_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getNumber() <em>Number</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getNumber()
   * @generated
   * @ordered
   */
  protected String number = NUMBER_EDEFAULT;

  /**
   * The cached value of the '{@link #getSentenceChain() <em>Sentence Chain</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSentenceChain()
   * @generated
   * @ordered
   */
  protected SentenceChain sentenceChain;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected FootNoteImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return NaturalLangPackage.Literals.FOOT_NOTE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getNumber()
  {
    return number;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setNumber(String newNumber)
  {
    String oldNumber = number;
    number = newNumber;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, NaturalLangPackage.FOOT_NOTE__NUMBER, oldNumber, number));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public SentenceChain getSentenceChain()
  {
    return sentenceChain;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetSentenceChain(SentenceChain newSentenceChain, NotificationChain msgs)
  {
    SentenceChain oldSentenceChain = sentenceChain;
    sentenceChain = newSentenceChain;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, NaturalLangPackage.FOOT_NOTE__SENTENCE_CHAIN, oldSentenceChain, newSentenceChain);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setSentenceChain(SentenceChain newSentenceChain)
  {
    if (newSentenceChain != sentenceChain)
    {
      NotificationChain msgs = null;
      if (sentenceChain != null)
        msgs = ((InternalEObject)sentenceChain).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - NaturalLangPackage.FOOT_NOTE__SENTENCE_CHAIN, null, msgs);
      if (newSentenceChain != null)
        msgs = ((InternalEObject)newSentenceChain).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - NaturalLangPackage.FOOT_NOTE__SENTENCE_CHAIN, null, msgs);
      msgs = basicSetSentenceChain(newSentenceChain, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, NaturalLangPackage.FOOT_NOTE__SENTENCE_CHAIN, newSentenceChain, newSentenceChain));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case NaturalLangPackage.FOOT_NOTE__SENTENCE_CHAIN:
        return basicSetSentenceChain(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case NaturalLangPackage.FOOT_NOTE__NUMBER:
        return getNumber();
      case NaturalLangPackage.FOOT_NOTE__SENTENCE_CHAIN:
        return getSentenceChain();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case NaturalLangPackage.FOOT_NOTE__NUMBER:
        setNumber((String)newValue);
        return;
      case NaturalLangPackage.FOOT_NOTE__SENTENCE_CHAIN:
        setSentenceChain((SentenceChain)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case NaturalLangPackage.FOOT_NOTE__NUMBER:
        setNumber(NUMBER_EDEFAULT);
        return;
      case NaturalLangPackage.FOOT_NOTE__SENTENCE_CHAIN:
        setSentenceChain((SentenceChain)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case NaturalLangPackage.FOOT_NOTE__NUMBER:
        return NUMBER_EDEFAULT == null ? number != null : !NUMBER_EDEFAULT.equals(number);
      case NaturalLangPackage.FOOT_NOTE__SENTENCE_CHAIN:
        return sentenceChain != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (number: ");
    result.append(number);
    result.append(')');
    return result.toString();
  }

} //FootNoteImpl