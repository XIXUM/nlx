/*
 * generated by Xtext 2.16.0
 */
grammar InternalNaturalLang;

options {
	superClass=AbstractInternalAntlrParser;
	backtrack=true;
}

@lexer::header {
package org.xixum.nlxparser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.xixum.nlxparser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xixum.nlxservices.NaturalLangGrammarAccess;

}

@parser::members {

/*
  This grammar contains a lot of empty actions to work around a bug in ANTLR.
  Otherwise the ANTLR tool will create synpreds that cannot be compiled in some rare cases.
*/

 	private NaturalLangGrammarAccess grammarAccess;

    public InternalNaturalLangParser(TokenStream input, NaturalLangGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Model";
   	}

   	@Override
   	protected NaturalLangGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	iv_ruleModel=ruleModel
	{ $current=$iv_ruleModel.current; }
	EOF;

// Rule Model
ruleModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getModelAccess().getSentencesSentenceTypeParserRuleCall_0());
			}
			lv_sentences_0_0=ruleSentenceType
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getModelRule());
				}
				add(
					$current,
					"sentences",
					lv_sentences_0_0,
					"org.xixum.nlx.naturalLang.SentenceType");
				afterParserOrEnumRuleCall();
			}
		)
	)*
;

// Entry rule entryRuleSentenceType
entryRuleSentenceType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSentenceTypeRule()); }
	iv_ruleSentenceType=ruleSentenceType
	{ $current=$iv_ruleSentenceType.current; }
	EOF;

// Rule SentenceType
ruleSentenceType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				newCompositeNode(grammarAccess.getSentenceTypeAccess().getWhitespaceParserRuleCall_0());
			}
			ruleWhitespace
			{
				afterParserOrEnumRuleCall();
			}
		)?
		(
			(
				(ruleChapterSentence)=>
				{
					/* */
				}
				{
					newCompositeNode(grammarAccess.getSentenceTypeAccess().getChapterSentenceParserRuleCall_1_0());
				}
				this_ChapterSentence_1=ruleChapterSentence
				{
					$current = $this_ChapterSentence_1.current;
					afterParserOrEnumRuleCall();
				}
			)
			    |
			{
				/* */
			}
			{
				newCompositeNode(grammarAccess.getSentenceTypeAccess().getParagraphBlockParserRuleCall_1_1());
			}
			this_ParagraphBlock_2=ruleParagraphBlock
			{
				$current = $this_ParagraphBlock_2.current;
				afterParserOrEnumRuleCall();
			}
			    |
			{
				/* */
			}
			{
				newCompositeNode(grammarAccess.getSentenceTypeAccess().getTableParserRuleCall_1_2());
			}
			this_Table_3=ruleTable
			{
				$current = $this_Table_3.current;
				afterParserOrEnumRuleCall();
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getSentenceTypeAccess().getPEndParagraphParserRuleCall_2_0());
				}
				lv_pEnd_4_0=ruleParagraph
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSentenceTypeRule());
					}
					set(
						$current,
						"pEnd",
						lv_pEnd_4_0,
						"org.xixum.nlx.naturalLang.Paragraph");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleParagraph
entryRuleParagraph returns [String current=null]:
	{ newCompositeNode(grammarAccess.getParagraphRule()); }
	iv_ruleParagraph=ruleParagraph
	{ $current=$iv_ruleParagraph.current.getText(); }
	EOF;

// Rule Paragraph
ruleParagraph returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			this_NEWLINE_0=RULE_NEWLINE
			{
				$current.merge(this_NEWLINE_0);
			}
			{
				newLeafNode(this_NEWLINE_0, grammarAccess.getParagraphAccess().getNEWLINETerminalRuleCall_0());
			}
		)+
		    |
		this_END_1=RULE_END
		{
			$current.merge(this_END_1);
		}
		{
			newLeafNode(this_END_1, grammarAccess.getParagraphAccess().getENDTerminalRuleCall_1());
		}
	)
;

// Entry rule entryRuleParagraphBlock
entryRuleParagraphBlock returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getParagraphBlockRule()); }
	iv_ruleParagraphBlock=ruleParagraphBlock
	{ $current=$iv_ruleParagraphBlock.current; }
	EOF;

// Rule ParagraphBlock
ruleParagraphBlock returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getParagraphBlockAccess().getBlockBlockElementParserRuleCall_0());
			}
			lv_block_0_0=ruleBlockElement
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getParagraphBlockRule());
				}
				add(
					$current,
					"block",
					lv_block_0_0,
					"org.xixum.nlx.naturalLang.BlockElement");
				afterParserOrEnumRuleCall();
			}
		)
	)+
;

// Entry rule entryRuleBlockElement
entryRuleBlockElement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBlockElementRule()); }
	iv_ruleBlockElement=ruleBlockElement
	{ $current=$iv_ruleBlockElement.current; }
	EOF;

// Rule BlockElement
ruleBlockElement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getBlockElementAccess().getSentenceChainParserRuleCall_0());
		}
		this_SentenceChain_0=ruleSentenceChain
		{
			$current = $this_SentenceChain_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getBlockElementAccess().getIgnoredTextParserRuleCall_1());
		}
		this_IgnoredText_1=ruleIgnoredText
		{
			$current = $this_IgnoredText_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getBlockElementAccess().getFootNoteParserRuleCall_2());
		}
		this_FootNote_2=ruleFootNote
		{
			$current = $this_FootNote_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		(
			(ruleListSentence)=>
			{
				/* */
			}
			{
				newCompositeNode(grammarAccess.getBlockElementAccess().getListSentenceParserRuleCall_3());
			}
			this_ListSentence_3=ruleListSentence
			{
				$current = $this_ListSentence_3.current;
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleFootNote
entryRuleFootNote returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFootNoteRule()); }
	iv_ruleFootNote=ruleFootNote
	{ $current=$iv_ruleFootNote.current; }
	EOF;

// Rule FootNote
ruleFootNote returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getFootNoteAccess().getNumberSimpleNumParserRuleCall_0_0());
				}
				lv_number_0_0=rulesimpleNum
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFootNoteRule());
					}
					set(
						$current,
						"number",
						lv_number_0_0,
						"org.xixum.nlx.naturalLang.simpleNum");
					afterParserOrEnumRuleCall();
				}
			)
		)
		this_BR_CL_1=RULE_BR_CL
		{
			newLeafNode(this_BR_CL_1, grammarAccess.getFootNoteAccess().getBR_CLTerminalRuleCall_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getFootNoteAccess().getSentenceChainSentenceChainParserRuleCall_2_0());
				}
				lv_SentenceChain_2_0=ruleSentenceChain
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFootNoteRule());
					}
					set(
						$current,
						"SentenceChain",
						lv_SentenceChain_2_0,
						"org.xixum.nlx.naturalLang.SentenceChain");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleTableLine
entryRuleTableLine returns [EObject current=null]@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}:
	{ newCompositeNode(grammarAccess.getTableLineRule()); }
	iv_ruleTableLine=ruleTableLine
	{ $current=$iv_ruleTableLine.current; }
	EOF;
finally {
	myHiddenTokenState.restore();
}

// Rule TableLine
ruleTableLine returns [EObject current=null]
@init {
	enterRule();
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}
@after {
	leaveRule();
}:
	(
		(
			lv_content_0_0=RULE_TABLE_LINE
			{
				newLeafNode(lv_content_0_0, grammarAccess.getTableLineAccess().getContentTABLE_LINETerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getTableLineRule());
				}
				setWithLastConsumed(
					$current,
					"content",
					lv_content_0_0,
					"org.xixum.nlx.naturalLang.TABLE_LINE");
			}
		)
	)
;
finally {
	myHiddenTokenState.restore();
}

// Entry rule entryRuleTableBorder
entryRuleTableBorder returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTableBorderRule()); }
	iv_ruleTableBorder=ruleTableBorder
	{ $current=$iv_ruleTableBorder.current; }
	EOF;

// Rule TableBorder
ruleTableBorder returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getTableBorderAccess().getTableColumnSeparatorParserRuleCall_0());
		}
		this_TableColumnSeparator_0=ruleTableColumnSeparator
		{
			$current = $this_TableColumnSeparator_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getTableBorderAccess().getTableLineParserRuleCall_1());
		}
		this_TableLine_1=ruleTableLine
		{
			$current = $this_TableLine_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleTableRow
entryRuleTableRow returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTableRowRule()); }
	iv_ruleTableRow=ruleTableRow
	{ $current=$iv_ruleTableRow.current; }
	EOF;

// Rule TableRow
ruleTableRow returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getTableRowAccess().getTableRowAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getTableRowAccess().getContentTableBorderParserRuleCall_1_0());
				}
				lv_content_1_0=ruleTableBorder
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTableRowRule());
					}
					add(
						$current,
						"content",
						lv_content_1_0,
						"org.xixum.nlx.naturalLang.TableBorder");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getTableRowAccess().getContentLineSentenceChainParserRuleCall_2_0());
				}
				lv_content_2_0=ruleLineSentenceChain
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTableRowRule());
					}
					add(
						$current,
						"content",
						lv_content_2_0,
						"org.xixum.nlx.naturalLang.LineSentenceChain");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getTableRowAccess().getContentTableBorderParserRuleCall_3_0_0());
					}
					lv_content_3_0=ruleTableBorder
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTableRowRule());
						}
						add(
							$current,
							"content",
							lv_content_3_0,
							"org.xixum.nlx.naturalLang.TableBorder");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getTableRowAccess().getContentLineSentenceChainParserRuleCall_3_1_0());
					}
					lv_content_4_0=ruleLineSentenceChain
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTableRowRule());
						}
						add(
							$current,
							"content",
							lv_content_4_0,
							"org.xixum.nlx.naturalLang.LineSentenceChain");
						afterParserOrEnumRuleCall();
					}
				)
			)?
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getTableRowAccess().getContentTableBorderParserRuleCall_4_0());
				}
				lv_content_5_0=ruleTableBorder
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTableRowRule());
					}
					add(
						$current,
						"content",
						lv_content_5_0,
						"org.xixum.nlx.naturalLang.TableBorder");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleTableColumnSeparator
entryRuleTableColumnSeparator returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTableColumnSeparatorRule()); }
	iv_ruleTableColumnSeparator=ruleTableColumnSeparator
	{ $current=$iv_ruleTableColumnSeparator.current; }
	EOF;

// Rule TableColumnSeparator
ruleTableColumnSeparator returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_char_0_0=RULE_HORIZ_SEP
			{
				newLeafNode(lv_char_0_0, grammarAccess.getTableColumnSeparatorAccess().getCharHORIZ_SEPTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getTableColumnSeparatorRule());
				}
				setWithLastConsumed(
					$current,
					"char",
					lv_char_0_0,
					"org.xixum.nlx.naturalLang.HORIZ_SEP");
			}
		)
	)
;

// Entry rule entryRuleTable
entryRuleTable returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTableRule()); }
	iv_ruleTable=ruleTable
	{ $current=$iv_ruleTable.current; }
	EOF;

// Rule Table
ruleTable returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getTableAccess().getLinesTableLineParserRuleCall_0_0());
				}
				lv_lines_0_0=ruleTableLine
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTableRule());
					}
					add(
						$current,
						"lines",
						lv_lines_0_0,
						"org.xixum.nlx.naturalLang.TableLine");
					afterParserOrEnumRuleCall();
				}
			)
		)
		this_NEWLINE_1=RULE_NEWLINE
		{
			newLeafNode(this_NEWLINE_1, grammarAccess.getTableAccess().getNEWLINETerminalRuleCall_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getTableAccess().getLinesTableRowParserRuleCall_2_0_0());
					}
					lv_lines_2_0=ruleTableRow
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTableRule());
						}
						add(
							$current,
							"lines",
							lv_lines_2_0,
							"org.xixum.nlx.naturalLang.TableRow");
						afterParserOrEnumRuleCall();
					}
				)
			)
			this_NEWLINE_3=RULE_NEWLINE
			{
				newLeafNode(this_NEWLINE_3, grammarAccess.getTableAccess().getNEWLINETerminalRuleCall_2_1());
			}
		)+
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getTableAccess().getLinesTableLineParserRuleCall_3_0_0());
					}
					lv_lines_4_0=ruleTableLine
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTableRule());
						}
						add(
							$current,
							"lines",
							lv_lines_4_0,
							"org.xixum.nlx.naturalLang.TableLine");
						afterParserOrEnumRuleCall();
					}
				)
			)
			this_NEWLINE_5=RULE_NEWLINE
			{
				newLeafNode(this_NEWLINE_5, grammarAccess.getTableAccess().getNEWLINETerminalRuleCall_3_1());
			}
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getTableAccess().getLinesTableRowParserRuleCall_3_2_0_0());
						}
						lv_lines_6_0=ruleTableRow
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getTableRule());
							}
							add(
								$current,
								"lines",
								lv_lines_6_0,
								"org.xixum.nlx.naturalLang.TableRow");
							afterParserOrEnumRuleCall();
						}
					)
				)
				this_NEWLINE_7=RULE_NEWLINE
				{
					newLeafNode(this_NEWLINE_7, grammarAccess.getTableAccess().getNEWLINETerminalRuleCall_3_2_1());
				}
			)+
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getTableAccess().getLinesTableLineParserRuleCall_4_0());
				}
				lv_lines_8_0=ruleTableLine
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTableRule());
					}
					add(
						$current,
						"lines",
						lv_lines_8_0,
						"org.xixum.nlx.naturalLang.TableLine");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleLineSentenceChain
entryRuleLineSentenceChain returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLineSentenceChainRule()); }
	iv_ruleLineSentenceChain=ruleLineSentenceChain
	{ $current=$iv_ruleLineSentenceChain.current; }
	EOF;

// Rule LineSentenceChain
ruleLineSentenceChain returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getLineSentenceChainAccess().getSentenceChainAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getLineSentenceChainAccess().getSentencesLineSentenceParserRuleCall_1_0());
				}
				lv_sentences_1_0=ruleLineSentence
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLineSentenceChainRule());
					}
					add(
						$current,
						"sentences",
						lv_sentences_1_0,
						"org.xixum.nlx.naturalLang.LineSentence");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				(
					lv_separators_2_0=RULE_FULL_STOP_IM
					{
						newLeafNode(lv_separators_2_0, grammarAccess.getLineSentenceChainAccess().getSeparatorsFULL_STOP_IMTerminalRuleCall_2_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getLineSentenceChainRule());
						}
						addWithLastConsumed(
							$current,
							"separators",
							lv_separators_2_0,
							"org.xixum.nlx.naturalLang.FULL_STOP_IM");
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getLineSentenceChainAccess().getSentencesLineSentenceParserRuleCall_2_1_0());
					}
					lv_sentences_3_0=ruleLineSentence
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLineSentenceChainRule());
						}
						add(
							$current,
							"sentences",
							lv_sentences_3_0,
							"org.xixum.nlx.naturalLang.LineSentence");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		(
			(
				lv_endpoint_4_0=RULE_FULL_STOP_IM
				{
					newLeafNode(lv_endpoint_4_0, grammarAccess.getLineSentenceChainAccess().getEndpointFULL_STOP_IMTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getLineSentenceChainRule());
					}
					setWithLastConsumed(
						$current,
						"endpoint",
						lv_endpoint_4_0,
						"org.xixum.nlx.naturalLang.FULL_STOP_IM");
				}
			)
		)?
	)
;

// Entry rule entryRuleSentenceChain
entryRuleSentenceChain returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSentenceChainRule()); }
	iv_ruleSentenceChain=ruleSentenceChain
	{ $current=$iv_ruleSentenceChain.current; }
	EOF;

// Rule SentenceChain
ruleSentenceChain returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getSentenceChainAccess().getSentenceChainAction_0(),
					$current);
			}
		)
		(
			((
				ruleSentence
			)
			)=>
			(
				{
					newCompositeNode(grammarAccess.getSentenceChainAccess().getSentencesSentenceParserRuleCall_1_0());
				}
				lv_sentences_1_0=ruleSentence
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSentenceChainRule());
					}
					add(
						$current,
						"sentences",
						lv_sentences_1_0,
						"org.xixum.nlx.naturalLang.Sentence");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				(
					lv_separators_2_0=RULE_FULL_STOP_IM
					{
						newLeafNode(lv_separators_2_0, grammarAccess.getSentenceChainAccess().getSeparatorsFULL_STOP_IMTerminalRuleCall_2_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSentenceChainRule());
						}
						addWithLastConsumed(
							$current,
							"separators",
							lv_separators_2_0,
							"org.xixum.nlx.naturalLang.FULL_STOP_IM");
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getSentenceChainAccess().getSentencesSentenceXParserRuleCall_2_1_0());
					}
					lv_sentences_3_0=ruleSentenceX
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSentenceChainRule());
						}
						add(
							$current,
							"sentences",
							lv_sentences_3_0,
							"org.xixum.nlx.naturalLang.SentenceX");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		(
			(
				(
					lv_endpoint_4_0=RULE_FULL_STOP_NL
					{
						newLeafNode(lv_endpoint_4_0, grammarAccess.getSentenceChainAccess().getEndpointFULL_STOP_NLTerminalRuleCall_3_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSentenceChainRule());
						}
						setWithLastConsumed(
							$current,
							"endpoint",
							lv_endpoint_4_0,
							"org.xixum.nlx.naturalLang.FULL_STOP_NL");
					}
				)
			)
			    |
			(
				(
					lv_endpoint_5_0=RULE_NEWLINE
					{
						newLeafNode(lv_endpoint_5_0, grammarAccess.getSentenceChainAccess().getEndpointNEWLINETerminalRuleCall_3_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSentenceChainRule());
						}
						setWithLastConsumed(
							$current,
							"endpoint",
							lv_endpoint_5_0,
							"org.xixum.nlx.naturalLang.NEWLINE");
					}
				)
			)
		)
	)
;

// Entry rule entryRuleSentenceChainX
entryRuleSentenceChainX returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSentenceChainXRule()); }
	iv_ruleSentenceChainX=ruleSentenceChainX
	{ $current=$iv_ruleSentenceChainX.current; }
	EOF;

// Rule SentenceChainX
ruleSentenceChainX returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getSentenceChainXAccess().getSentenceChainAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getSentenceChainXAccess().getSentencesSentenceParserRuleCall_1_0());
				}
				lv_sentences_1_0=ruleSentence
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSentenceChainXRule());
					}
					add(
						$current,
						"sentences",
						lv_sentences_1_0,
						"org.xixum.nlx.naturalLang.Sentence");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				(
					lv_separators_2_0=RULE_FULL_STOP_IM
					{
						newLeafNode(lv_separators_2_0, grammarAccess.getSentenceChainXAccess().getSeparatorsFULL_STOP_IMTerminalRuleCall_2_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSentenceChainXRule());
						}
						addWithLastConsumed(
							$current,
							"separators",
							lv_separators_2_0,
							"org.xixum.nlx.naturalLang.FULL_STOP_IM");
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getSentenceChainXAccess().getSentencesSentenceXParserRuleCall_2_1_0());
					}
					lv_sentences_3_0=ruleSentenceX
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSentenceChainXRule());
						}
						add(
							$current,
							"sentences",
							lv_sentences_3_0,
							"org.xixum.nlx.naturalLang.SentenceX");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		(
			((
				(
					(
						RULE_FULL_STOP_NL
					)
				)
				    |
				(
					(
						RULE_NEWLINE
					)
				)
				    |
				(
					(
						RULE_KOMMA
					)
				)
			)
			)=>
			(
				(
					(
						lv_endpoint_4_0=RULE_FULL_STOP_NL
						{
							newLeafNode(lv_endpoint_4_0, grammarAccess.getSentenceChainXAccess().getEndpointFULL_STOP_NLTerminalRuleCall_3_0_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getSentenceChainXRule());
							}
							setWithLastConsumed(
								$current,
								"endpoint",
								lv_endpoint_4_0,
								"org.xixum.nlx.naturalLang.FULL_STOP_NL");
						}
					)
				)
				    |
				(
					(
						lv_endpoint_5_0=RULE_NEWLINE
						{
							newLeafNode(lv_endpoint_5_0, grammarAccess.getSentenceChainXAccess().getEndpointNEWLINETerminalRuleCall_3_0_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getSentenceChainXRule());
							}
							setWithLastConsumed(
								$current,
								"endpoint",
								lv_endpoint_5_0,
								"org.xixum.nlx.naturalLang.NEWLINE");
						}
					)
				)
				    |
				(
					(
						lv_endpoint_6_0=RULE_KOMMA
						{
							newLeafNode(lv_endpoint_6_0, grammarAccess.getSentenceChainXAccess().getEndpointKOMMATerminalRuleCall_3_0_2_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getSentenceChainXRule());
							}
							setWithLastConsumed(
								$current,
								"endpoint",
								lv_endpoint_6_0,
								"org.xixum.nlx.naturalLang.KOMMA");
						}
					)
				)
			)
		)
	)
;

// Entry rule entryRuleSentence
entryRuleSentence returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSentenceRule()); }
	iv_ruleSentence=ruleSentence
	{ $current=$iv_ruleSentence.current; }
	EOF;

// Rule Sentence
ruleSentence returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getSentenceAccess().getSentenceAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getSentenceAccess().getSubsentenceSubSentenceParserRuleCall_1_0());
				}
				lv_subsentence_1_0=ruleSubSentence
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSentenceRule());
					}
					add(
						$current,
						"subsentence",
						lv_subsentence_1_0,
						"org.xixum.nlx.naturalLang.SubSentence");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			this_KOMMA_2=RULE_KOMMA
			{
				newLeafNode(this_KOMMA_2, grammarAccess.getSentenceAccess().getKOMMATerminalRuleCall_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSentenceAccess().getSubsentenceTrailSubSentenceParserRuleCall_2_1_0());
					}
					lv_subsentence_3_0=ruleTrailSubSentence
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSentenceRule());
						}
						add(
							$current,
							"subsentence",
							lv_subsentence_3_0,
							"org.xixum.nlx.naturalLang.TrailSubSentence");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleLineSentence
entryRuleLineSentence returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLineSentenceRule()); }
	iv_ruleLineSentence=ruleLineSentence
	{ $current=$iv_ruleLineSentence.current; }
	EOF;

// Rule LineSentence
ruleLineSentence returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getLineSentenceAccess().getSentenceAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getLineSentenceAccess().getSubsentenceLineSubSentenceParserRuleCall_1_0());
				}
				lv_subsentence_1_0=ruleLineSubSentence
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLineSentenceRule());
					}
					add(
						$current,
						"subsentence",
						lv_subsentence_1_0,
						"org.xixum.nlx.naturalLang.LineSubSentence");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			this_KOMMA_2=RULE_KOMMA
			{
				newLeafNode(this_KOMMA_2, grammarAccess.getLineSentenceAccess().getKOMMATerminalRuleCall_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getLineSentenceAccess().getSubsentenceLineSubSentenceParserRuleCall_2_1_0());
					}
					lv_subsentence_3_0=ruleLineSubSentence
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLineSentenceRule());
						}
						add(
							$current,
							"subsentence",
							lv_subsentence_3_0,
							"org.xixum.nlx.naturalLang.LineSubSentence");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleFreeSentence
entryRuleFreeSentence returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFreeSentenceRule()); }
	iv_ruleFreeSentence=ruleFreeSentence
	{ $current=$iv_ruleFreeSentence.current; }
	EOF;

// Rule FreeSentence
ruleFreeSentence returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getFreeSentenceAccess().getSentenceAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getFreeSentenceAccess().getSubsentenceFreeSubSentenceParserRuleCall_1_0());
				}
				lv_subsentence_1_0=ruleFreeSubSentence
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFreeSentenceRule());
					}
					add(
						$current,
						"subsentence",
						lv_subsentence_1_0,
						"org.xixum.nlx.naturalLang.FreeSubSentence");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			this_KOMMA_2=RULE_KOMMA
			{
				newLeafNode(this_KOMMA_2, grammarAccess.getFreeSentenceAccess().getKOMMATerminalRuleCall_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getFreeSentenceAccess().getSubsentenceFreeSubSentenceParserRuleCall_2_1_0());
					}
					lv_subsentence_3_0=ruleFreeSubSentence
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFreeSentenceRule());
						}
						add(
							$current,
							"subsentence",
							lv_subsentence_3_0,
							"org.xixum.nlx.naturalLang.FreeSubSentence");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleSentenceX
entryRuleSentenceX returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSentenceXRule()); }
	iv_ruleSentenceX=ruleSentenceX
	{ $current=$iv_ruleSentenceX.current; }
	EOF;

// Rule SentenceX
ruleSentenceX returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getSentenceXAccess().getSentenceAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getSentenceXAccess().getSubsentenceTrailSubSentenceParserRuleCall_1_0());
				}
				lv_subsentence_1_0=ruleTrailSubSentence
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSentenceXRule());
					}
					add(
						$current,
						"subsentence",
						lv_subsentence_1_0,
						"org.xixum.nlx.naturalLang.TrailSubSentence");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			this_KOMMA_2=RULE_KOMMA
			{
				newLeafNode(this_KOMMA_2, grammarAccess.getSentenceXAccess().getKOMMATerminalRuleCall_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSentenceXAccess().getSubsentenceTrailSubSentenceParserRuleCall_2_1_0());
					}
					lv_subsentence_3_0=ruleTrailSubSentence
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSentenceXRule());
						}
						add(
							$current,
							"subsentence",
							lv_subsentence_3_0,
							"org.xixum.nlx.naturalLang.TrailSubSentence");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleListSentence
entryRuleListSentence returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getListSentenceRule()); }
	iv_ruleListSentence=ruleListSentence
	{ $current=$iv_ruleListSentence.current; }
	EOF;

// Rule ListSentence
ruleListSentence returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getListSentenceAccess().getListpointListPointParserRuleCall_0_0());
				}
				lv_listpoint_0_0=ruleListPoint
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getListSentenceRule());
					}
					set(
						$current,
						"listpoint",
						lv_listpoint_0_0,
						"org.xixum.nlx.naturalLang.ListPoint");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getListSentenceAccess().getSentenceChainSentenceChainXParserRuleCall_1_0_0());
					}
					lv_SentenceChain_1_0=ruleSentenceChainX
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getListSentenceRule());
						}
						set(
							$current,
							"SentenceChain",
							lv_SentenceChain_1_0,
							"org.xixum.nlx.naturalLang.SentenceChainX");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			this_NEWLINE_2=RULE_NEWLINE
			{
				newLeafNode(this_NEWLINE_2, grammarAccess.getListSentenceAccess().getNEWLINETerminalRuleCall_1_1());
			}
		)
	)
;

// Entry rule entryRuleChapterSentence
entryRuleChapterSentence returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getChapterSentenceRule()); }
	iv_ruleChapterSentence=ruleChapterSentence
	{ $current=$iv_ruleChapterSentence.current; }
	EOF;

// Rule ChapterSentence
ruleChapterSentence returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				((
					ruleChapter_Unit_Low
				)
				)=>
				(
					{
						newCompositeNode(grammarAccess.getChapterSentenceAccess().getChapterNumberChapter_Unit_LowParserRuleCall_0_0_0());
					}
					lv_chapterNumber_0_0=ruleChapter_Unit_Low
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getChapterSentenceRule());
						}
						set(
							$current,
							"chapterNumber",
							lv_chapterNumber_0_0,
							"org.xixum.nlx.naturalLang.Chapter_Unit_Low");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getChapterSentenceAccess().getChapterNumberChapterAlphaParserRuleCall_0_1_0());
					}
					lv_chapterNumber_1_0=ruleChapterAlpha
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getChapterSentenceRule());
						}
						set(
							$current,
							"chapterNumber",
							lv_chapterNumber_1_0,
							"org.xixum.nlx.naturalLang.ChapterAlpha");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getChapterSentenceAccess().getChapterNumberChapter_Unit_HIParserRuleCall_0_2_0());
					}
					lv_chapterNumber_2_0=ruleChapter_Unit_HI
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getChapterSentenceRule());
						}
						set(
							$current,
							"chapterNumber",
							lv_chapterNumber_2_0,
							"org.xixum.nlx.naturalLang.Chapter_Unit_HI");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getChapterSentenceAccess().getHeadlineLineSentenceChainParserRuleCall_1_0());
				}
				lv_Headline_3_0=ruleLineSentenceChain
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getChapterSentenceRule());
					}
					set(
						$current,
						"Headline",
						lv_Headline_3_0,
						"org.xixum.nlx.naturalLang.LineSentenceChain");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleSubSentence
entryRuleSubSentence returns [EObject current=null]@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}:
	{ newCompositeNode(grammarAccess.getSubSentenceRule()); }
	iv_ruleSubSentence=ruleSubSentence
	{ $current=$iv_ruleSubSentence.current; }
	EOF;
finally {
	myHiddenTokenState.restore();
}

// Rule SubSentence
ruleSubSentence returns [EObject current=null]
@init {
	enterRule();
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getSubSentenceAccess().getSubSentenceAction_0(),
					$current);
			}
		)
		(
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getSubSentenceAccess().getElementsNoNElementParserRuleCall_1_0_0_0());
						}
						lv_elements_1_0=ruleNoNElement
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getSubSentenceRule());
							}
							add(
								$current,
								"elements",
								lv_elements_1_0,
								"org.xixum.nlx.naturalLang.NoNElement");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					this_SPACE_2=RULE_SPACE
					{
						newLeafNode(this_SPACE_2, grammarAccess.getSubSentenceAccess().getSPACETerminalRuleCall_1_0_1_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getSubSentenceAccess().getElementsElementsParserRuleCall_1_0_1_1_0());
							}
							lv_elements_3_0=ruleElements
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getSubSentenceRule());
								}
								add(
									$current,
									"elements",
									lv_elements_3_0,
									"org.xixum.nlx.naturalLang.Elements");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)*
			)
			    |
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getSubSentenceAccess().getElementsNoNElementXParserRuleCall_1_1_0_0());
						}
						lv_elements_4_0=ruleNoNElementX
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getSubSentenceRule());
							}
							add(
								$current,
								"elements",
								lv_elements_4_0,
								"org.xixum.nlx.naturalLang.NoNElementX");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					this_SPACE_5=RULE_SPACE
					{
						newLeafNode(this_SPACE_5, grammarAccess.getSubSentenceAccess().getSPACETerminalRuleCall_1_1_1_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getSubSentenceAccess().getElementsElementsParserRuleCall_1_1_1_1_0());
							}
							lv_elements_6_0=ruleElements
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getSubSentenceRule());
								}
								add(
									$current,
									"elements",
									lv_elements_6_0,
									"org.xixum.nlx.naturalLang.Elements");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)+
			)
		)
		(
			(
				this_SPACE_7=RULE_SPACE
				{
					newLeafNode(this_SPACE_7, grammarAccess.getSubSentenceAccess().getSPACETerminalRuleCall_2_0());
				}
			)?
			(
				(
					{
						newCompositeNode(grammarAccess.getSubSentenceAccess().getElementsNew_LineParserRuleCall_2_1_0());
					}
					lv_elements_8_0=ruleNew_Line
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSubSentenceRule());
						}
						add(
							$current,
							"elements",
							lv_elements_8_0,
							"org.xixum.nlx.naturalLang.New_Line");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				this_SPACE_9=RULE_SPACE
				{
					newLeafNode(this_SPACE_9, grammarAccess.getSubSentenceAccess().getSPACETerminalRuleCall_2_2());
				}
			)?
			(
				(
					{
						newCompositeNode(grammarAccess.getSubSentenceAccess().getElementsNoNElementX2ParserRuleCall_2_3_0());
					}
					lv_elements_10_0=ruleNoNElementX2
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSubSentenceRule());
						}
						add(
							$current,
							"elements",
							lv_elements_10_0,
							"org.xixum.nlx.naturalLang.NoNElementX2");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				this_SPACE_11=RULE_SPACE
				{
					newLeafNode(this_SPACE_11, grammarAccess.getSubSentenceAccess().getSPACETerminalRuleCall_2_4_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getSubSentenceAccess().getElementsElementsParserRuleCall_2_4_1_0());
						}
						lv_elements_12_0=ruleElements
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getSubSentenceRule());
							}
							add(
								$current,
								"elements",
								lv_elements_12_0,
								"org.xixum.nlx.naturalLang.Elements");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)*
		(
			this_SPACE_13=RULE_SPACE
			{
				newLeafNode(this_SPACE_13, grammarAccess.getSubSentenceAccess().getSPACETerminalRuleCall_3());
			}
		)?
	)
;
finally {
	myHiddenTokenState.restore();
}

// Entry rule entryRuleTrailSubSentence
entryRuleTrailSubSentence returns [EObject current=null]@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}:
	{ newCompositeNode(grammarAccess.getTrailSubSentenceRule()); }
	iv_ruleTrailSubSentence=ruleTrailSubSentence
	{ $current=$iv_ruleTrailSubSentence.current; }
	EOF;
finally {
	myHiddenTokenState.restore();
}

// Rule TrailSubSentence
ruleTrailSubSentence returns [EObject current=null]
@init {
	enterRule();
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getTrailSubSentenceAccess().getSubSentenceAction_0(),
					$current);
			}
		)
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getTrailSubSentenceAccess().getElementsElementsParserRuleCall_1_0_0());
					}
					lv_elements_1_0=ruleElements
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTrailSubSentenceRule());
						}
						add(
							$current,
							"elements",
							lv_elements_1_0,
							"org.xixum.nlx.naturalLang.Elements");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				this_SPACE_2=RULE_SPACE
				{
					newLeafNode(this_SPACE_2, grammarAccess.getTrailSubSentenceAccess().getSPACETerminalRuleCall_1_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getTrailSubSentenceAccess().getElementsElementsParserRuleCall_1_1_1_0());
						}
						lv_elements_3_0=ruleElements
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getTrailSubSentenceRule());
							}
							add(
								$current,
								"elements",
								lv_elements_3_0,
								"org.xixum.nlx.naturalLang.Elements");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			(
				(
					this_SPACE_4=RULE_SPACE
					{
						newLeafNode(this_SPACE_4, grammarAccess.getTrailSubSentenceAccess().getSPACETerminalRuleCall_1_2_0());
					}
				)?
				(
					(
						{
							newCompositeNode(grammarAccess.getTrailSubSentenceAccess().getElementsNew_LineParserRuleCall_1_2_1_0());
						}
						lv_elements_5_0=ruleNew_Line
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getTrailSubSentenceRule());
							}
							add(
								$current,
								"elements",
								lv_elements_5_0,
								"org.xixum.nlx.naturalLang.New_Line");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					this_SPACE_6=RULE_SPACE
					{
						newLeafNode(this_SPACE_6, grammarAccess.getTrailSubSentenceAccess().getSPACETerminalRuleCall_1_2_2());
					}
				)?
				(
					((
						ruleNoNElementX2
					)
					)=>
					(
						{
							newCompositeNode(grammarAccess.getTrailSubSentenceAccess().getElementsNoNElementX2ParserRuleCall_1_2_3_0());
						}
						lv_elements_7_0=ruleNoNElementX2
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getTrailSubSentenceRule());
							}
							add(
								$current,
								"elements",
								lv_elements_7_0,
								"org.xixum.nlx.naturalLang.NoNElementX2");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					this_SPACE_8=RULE_SPACE
					{
						newLeafNode(this_SPACE_8, grammarAccess.getTrailSubSentenceAccess().getSPACETerminalRuleCall_1_2_4_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getTrailSubSentenceAccess().getElementsElementsParserRuleCall_1_2_4_1_0());
							}
							lv_elements_9_0=ruleElements
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getTrailSubSentenceRule());
								}
								add(
									$current,
									"elements",
									lv_elements_9_0,
									"org.xixum.nlx.naturalLang.Elements");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)*
			)*
		)
		(
			this_SPACE_10=RULE_SPACE
			{
				newLeafNode(this_SPACE_10, grammarAccess.getTrailSubSentenceAccess().getSPACETerminalRuleCall_2());
			}
		)?
	)
;
finally {
	myHiddenTokenState.restore();
}

// Entry rule entryRuleFreeSubSentence
entryRuleFreeSubSentence returns [EObject current=null]@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}:
	{ newCompositeNode(grammarAccess.getFreeSubSentenceRule()); }
	iv_ruleFreeSubSentence=ruleFreeSubSentence
	{ $current=$iv_ruleFreeSubSentence.current; }
	EOF;
finally {
	myHiddenTokenState.restore();
}

// Rule FreeSubSentence
ruleFreeSubSentence returns [EObject current=null]
@init {
	enterRule();
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getFreeSubSentenceAccess().getSubSentenceAction_0(),
					$current);
			}
		)
		(
			this_SPACE_1=RULE_SPACE
			{
				newLeafNode(this_SPACE_1, grammarAccess.getFreeSubSentenceAccess().getSPACETerminalRuleCall_1_0());
			}
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getFreeSubSentenceAccess().getElementsNew_LineParserRuleCall_1_1_0());
					}
					lv_elements_2_0=ruleNew_Line
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFreeSubSentenceRule());
						}
						add(
							$current,
							"elements",
							lv_elements_2_0,
							"org.xixum.nlx.naturalLang.New_Line");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getFreeSubSentenceAccess().getElementsAllElementsParserRuleCall_2_0());
				}
				lv_elements_3_0=ruleAllElements
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFreeSubSentenceRule());
					}
					add(
						$current,
						"elements",
						lv_elements_3_0,
						"org.xixum.nlx.naturalLang.AllElements");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				this_SPACE_4=RULE_SPACE
				{
					newLeafNode(this_SPACE_4, grammarAccess.getFreeSubSentenceAccess().getSPACETerminalRuleCall_3_0_0());
				}
				    |
				(
					(
						{
							newCompositeNode(grammarAccess.getFreeSubSentenceAccess().getElementsNew_LineParserRuleCall_3_0_1_0());
						}
						lv_elements_5_0=ruleNew_Line
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getFreeSubSentenceRule());
							}
							add(
								$current,
								"elements",
								lv_elements_5_0,
								"org.xixum.nlx.naturalLang.New_Line");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)+
			(
				(
					{
						newCompositeNode(grammarAccess.getFreeSubSentenceAccess().getElementsAllElementsParserRuleCall_3_1_0());
					}
					lv_elements_6_0=ruleAllElements
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFreeSubSentenceRule());
						}
						add(
							$current,
							"elements",
							lv_elements_6_0,
							"org.xixum.nlx.naturalLang.AllElements");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		(
			this_SPACE_7=RULE_SPACE
			{
				newLeafNode(this_SPACE_7, grammarAccess.getFreeSubSentenceAccess().getSPACETerminalRuleCall_4_0());
			}
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getFreeSubSentenceAccess().getElementsNew_LineParserRuleCall_4_1_0());
					}
					lv_elements_8_0=ruleNew_Line
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFreeSubSentenceRule());
						}
						add(
							$current,
							"elements",
							lv_elements_8_0,
							"org.xixum.nlx.naturalLang.New_Line");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;
finally {
	myHiddenTokenState.restore();
}

// Entry rule entryRuleLineSubSentence
entryRuleLineSubSentence returns [EObject current=null]@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}:
	{ newCompositeNode(grammarAccess.getLineSubSentenceRule()); }
	iv_ruleLineSubSentence=ruleLineSubSentence
	{ $current=$iv_ruleLineSubSentence.current; }
	EOF;
finally {
	myHiddenTokenState.restore();
}

// Rule LineSubSentence
ruleLineSubSentence returns [EObject current=null]
@init {
	enterRule();
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getLineSubSentenceAccess().getSubSentenceAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getLineSubSentenceAccess().getElementsElementsParserRuleCall_1_0());
				}
				lv_elements_1_0=ruleElements
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLineSubSentenceRule());
					}
					add(
						$current,
						"elements",
						lv_elements_1_0,
						"org.xixum.nlx.naturalLang.Elements");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			this_SPACE_2=RULE_SPACE
			{
				newLeafNode(this_SPACE_2, grammarAccess.getLineSubSentenceAccess().getSPACETerminalRuleCall_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getLineSubSentenceAccess().getElementsElementsParserRuleCall_2_1_0());
					}
					lv_elements_3_0=ruleElements
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLineSubSentenceRule());
						}
						add(
							$current,
							"elements",
							lv_elements_3_0,
							"org.xixum.nlx.naturalLang.Elements");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		(
			this_SPACE_4=RULE_SPACE
			{
				newLeafNode(this_SPACE_4, grammarAccess.getLineSubSentenceAccess().getSPACETerminalRuleCall_3());
			}
		)?
	)
;
finally {
	myHiddenTokenState.restore();
}

// Entry rule entryRuleListPoint
entryRuleListPoint returns [String current=null]:
	{ newCompositeNode(grammarAccess.getListPointRule()); }
	iv_ruleListPoint=ruleListPoint
	{ $current=$iv_ruleListPoint.current.getText(); }
	EOF;

// Rule ListPoint
ruleListPoint returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_MULTI_0=RULE_MULTI
		{
			$current.merge(this_MULTI_0);
		}
		{
			newLeafNode(this_MULTI_0, grammarAccess.getListPointAccess().getMULTITerminalRuleCall_0());
		}
		    |
		this_DASH_1=RULE_DASH
		{
			$current.merge(this_DASH_1);
		}
		{
			newLeafNode(this_DASH_1, grammarAccess.getListPointAccess().getDASHTerminalRuleCall_1());
		}
		    |
		{
			newCompositeNode(grammarAccess.getListPointAccess().getListPointNumParserRuleCall_2());
		}
		this_ListPointNum_2=ruleListPointNum
		{
			$current.merge(this_ListPointNum_2);
		}
		{
			afterParserOrEnumRuleCall();
		}
		    |
		this_MINUS_3=RULE_MINUS
		{
			$current.merge(this_MINUS_3);
		}
		{
			newLeafNode(this_MINUS_3, grammarAccess.getListPointAccess().getMINUSTerminalRuleCall_3());
		}
	)
;

// Entry rule entryRuleListPointNum
entryRuleListPointNum returns [String current=null]@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}:
	{ newCompositeNode(grammarAccess.getListPointNumRule()); }
	iv_ruleListPointNum=ruleListPointNum
	{ $current=$iv_ruleListPointNum.current.getText(); }
	EOF;
finally {
	myHiddenTokenState.restore();
}

// Rule ListPointNum
ruleListPointNum returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}
@after {
	leaveRule();
}:
	(
		(
			this_INT_0=RULE_INT
			{
				$current.merge(this_INT_0);
			}
			{
				newLeafNode(this_INT_0, grammarAccess.getListPointNumAccess().getINTTerminalRuleCall_0_0());
			}
			(
				(
					this_DOT_1=RULE_DOT
					{
						$current.merge(this_DOT_1);
					}
					{
						newLeafNode(this_DOT_1, grammarAccess.getListPointNumAccess().getDOTTerminalRuleCall_0_1_0_0());
					}
					this_BR_CL_2=RULE_BR_CL
					{
						$current.merge(this_BR_CL_2);
					}
					{
						newLeafNode(this_BR_CL_2, grammarAccess.getListPointNumAccess().getBR_CLTerminalRuleCall_0_1_0_1());
					}
					this_SPACE_3=RULE_SPACE
					{
						$current.merge(this_SPACE_3);
					}
					{
						newLeafNode(this_SPACE_3, grammarAccess.getListPointNumAccess().getSPACETerminalRuleCall_0_1_0_2());
					}
				)
				    |
				this_FULL_STOP_IM_4=RULE_FULL_STOP_IM
				{
					$current.merge(this_FULL_STOP_IM_4);
				}
				{
					newLeafNode(this_FULL_STOP_IM_4, grammarAccess.getListPointNumAccess().getFULL_STOP_IMTerminalRuleCall_0_1_1());
				}
			)
		)
		    |
		(
			this_ALPHA_5=RULE_ALPHA
			{
				$current.merge(this_ALPHA_5);
			}
			{
				newLeafNode(this_ALPHA_5, grammarAccess.getListPointNumAccess().getALPHATerminalRuleCall_1_0());
			}
			(
				(
					this_DOT_6=RULE_DOT
					{
						$current.merge(this_DOT_6);
					}
					{
						newLeafNode(this_DOT_6, grammarAccess.getListPointNumAccess().getDOTTerminalRuleCall_1_1_0_0());
					}
					this_BR_CL_7=RULE_BR_CL
					{
						$current.merge(this_BR_CL_7);
					}
					{
						newLeafNode(this_BR_CL_7, grammarAccess.getListPointNumAccess().getBR_CLTerminalRuleCall_1_1_0_1());
					}
					this_SPACE_8=RULE_SPACE
					{
						$current.merge(this_SPACE_8);
					}
					{
						newLeafNode(this_SPACE_8, grammarAccess.getListPointNumAccess().getSPACETerminalRuleCall_1_1_0_2());
					}
				)
				    |
				this_FULL_STOP_IM_9=RULE_FULL_STOP_IM
				{
					$current.merge(this_FULL_STOP_IM_9);
				}
				{
					newLeafNode(this_FULL_STOP_IM_9, grammarAccess.getListPointNumAccess().getFULL_STOP_IMTerminalRuleCall_1_1_1());
				}
			)
		)
	)
;
finally {
	myHiddenTokenState.restore();
}

// Entry rule entryRuleNoNElement
entryRuleNoNElement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNoNElementRule()); }
	iv_ruleNoNElement=ruleNoNElement
	{ $current=$iv_ruleNoNElement.current; }
	EOF;

// Rule NoNElement
ruleNoNElement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getNoNElementAccess().getQuoteParserRuleCall_0());
		}
		this_Quote_0=ruleQuote
		{
			$current = $this_Quote_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getNoNElementAccess().getBracketsParserRuleCall_1());
		}
		this_Brackets_1=ruleBrackets
		{
			$current = $this_Brackets_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getNoNElementAccess().getWordParserRuleCall_2());
		}
		this_Word_2=ruleWord
		{
			$current = $this_Word_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getNoNElementAccess().getSymbolsXParserRuleCall_3());
		}
		this_SymbolsX_3=ruleSymbolsX
		{
			$current = $this_SymbolsX_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getNoNElementAccess().getIgnoredTextParserRuleCall_4());
		}
		this_IgnoredText_4=ruleIgnoredText
		{
			$current = $this_IgnoredText_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getNoNElementAccess().getShortCutParserRuleCall_5());
		}
		this_ShortCut_5=ruleShortCut
		{
			$current = $this_ShortCut_5.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getNoNElementAccess().getHashNumberParserRuleCall_6());
		}
		this_HashNumber_6=ruleHashNumber
		{
			$current = $this_HashNumber_6.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getNoNElementAccess().getUrlAdressParserRuleCall_7());
		}
		this_UrlAdress_7=ruleUrlAdress
		{
			$current = $this_UrlAdress_7.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getNoNElementAccess().getMailAdressParserRuleCall_8());
		}
		this_MailAdress_8=ruleMailAdress
		{
			$current = $this_MailAdress_8.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getNoNElementAccess().getFormulaParserRuleCall_9());
		}
		this_Formula_9=ruleFormula
		{
			$current = $this_Formula_9.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getNoNElementAccess().getArrayParserRuleCall_10());
		}
		this_Array_10=ruleArray
		{
			$current = $this_Array_10.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getNoNElementAccess().getItWordParserRuleCall_11());
		}
		this_ItWord_11=ruleItWord
		{
			$current = $this_ItWord_11.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleBrackets
entryRuleBrackets returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBracketsRule()); }
	iv_ruleBrackets=ruleBrackets
	{ $current=$iv_ruleBrackets.current; }
	EOF;

// Rule Brackets
ruleBrackets returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getBracketsAccess().getBracketSentenceParserRuleCall_0());
		}
		this_BracketSentence_0=ruleBracketSentence
		{
			$current = $this_BracketSentence_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getBracketsAccess().getExtBracketSentenceParserRuleCall_1());
		}
		this_ExtBracketSentence_1=ruleExtBracketSentence
		{
			$current = $this_ExtBracketSentence_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getBracketsAccess().getExtBracketSentenceCParserRuleCall_2());
		}
		this_ExtBracketSentenceC_2=ruleExtBracketSentenceC
		{
			$current = $this_ExtBracketSentenceC_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleNoNElementX
entryRuleNoNElementX returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNoNElementXRule()); }
	iv_ruleNoNElementX=ruleNoNElementX
	{ $current=$iv_ruleNoNElementX.current; }
	EOF;

// Rule NoNElementX
ruleNoNElementX returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getNoNElementXAccess().getNoNElementParserRuleCall_0());
		}
		this_NoNElement_0=ruleNoNElement
		{
			$current = $this_NoNElement_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getNoNElementXAccess().getWordShortParserRuleCall_1());
		}
		this_WordShort_1=ruleWordShort
		{
			$current = $this_WordShort_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleNoNElementX2
entryRuleNoNElementX2 returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNoNElementX2Rule()); }
	iv_ruleNoNElementX2=ruleNoNElementX2
	{ $current=$iv_ruleNoNElementX2.current; }
	EOF;

// Rule NoNElementX2
ruleNoNElementX2 returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getNoNElementX2Access().getSimpleUnitParserRuleCall_0());
		}
		this_SimpleUnit_0=ruleSimpleUnit
		{
			$current = $this_SimpleUnit_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getNoNElementX2Access().getUnitParserRuleCall_1());
		}
		this_Unit_1=ruleUnit
		{
			$current = $this_Unit_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getNoNElementX2Access().getNoNElementParserRuleCall_2());
		}
		this_NoNElement_2=ruleNoNElement
		{
			$current = $this_NoNElement_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getNoNElementX2Access().getChapterAlphaParserRuleCall_3());
		}
		this_ChapterAlpha_3=ruleChapterAlpha
		{
			$current = $this_ChapterAlpha_3.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleElements
entryRuleElements returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getElementsRule()); }
	iv_ruleElements=ruleElements
	{ $current=$iv_ruleElements.current; }
	EOF;

// Rule Elements
ruleElements returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getElementsAccess().getSymbolsParserRuleCall_0());
		}
		this_Symbols_0=ruleSymbols
		{
			$current = $this_Symbols_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		(
			(ruleNoNElementX2)=>
			{
				/* */
			}
			{
				newCompositeNode(grammarAccess.getElementsAccess().getNoNElementX2ParserRuleCall_1());
			}
			this_NoNElementX2_1=ruleNoNElementX2
			{
				$current = $this_NoNElementX2_1.current;
				afterParserOrEnumRuleCall();
			}
		)
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getElementsAccess().getWordShortParserRuleCall_2());
		}
		this_WordShort_2=ruleWordShort
		{
			$current = $this_WordShort_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleAllElements
entryRuleAllElements returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAllElementsRule()); }
	iv_ruleAllElements=ruleAllElements
	{ $current=$iv_ruleAllElements.current; }
	EOF;

// Rule AllElements
ruleAllElements returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(ruleElements)=>
			{
				/* */
			}
			{
				newCompositeNode(grammarAccess.getAllElementsAccess().getElementsParserRuleCall_0());
			}
			this_Elements_0=ruleElements
			{
				$current = $this_Elements_0.current;
				afterParserOrEnumRuleCall();
			}
		)
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getAllElementsAccess().getNew_LineParserRuleCall_1());
		}
		this_New_Line_1=ruleNew_Line
		{
			$current = $this_New_Line_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleBracketSentence
entryRuleBracketSentence returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBracketSentenceRule()); }
	iv_ruleBracketSentence=ruleBracketSentence
	{ $current=$iv_ruleBracketSentence.current; }
	EOF;

// Rule BracketSentence
ruleBracketSentence returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getBracketSentenceAccess().getBracketSentenceAction_0(),
					$current);
			}
		)
		(
			(
				lv_open_1_0=RULE_BR_O
				{
					newLeafNode(lv_open_1_0, grammarAccess.getBracketSentenceAccess().getOpenBR_OTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBracketSentenceRule());
					}
					setWithLastConsumed(
						$current,
						"open",
						lv_open_1_0,
						"org.xixum.nlx.naturalLang.BR_O");
				}
			)
		)
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getBracketSentenceAccess().getBrackedSentencesFreeSentenceParserRuleCall_2_0_0());
					}
					lv_brackedSentences_2_0=ruleFreeSentence
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBracketSentenceRule());
						}
						add(
							$current,
							"brackedSentences",
							lv_brackedSentences_2_0,
							"org.xixum.nlx.naturalLang.FreeSentence");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getBracketSentenceAccess().getSeparatorFullStopParserRuleCall_2_1_0_0());
						}
						lv_separator_3_0=ruleFullStop
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getBracketSentenceRule());
							}
							add(
								$current,
								"separator",
								lv_separator_3_0,
								"org.xixum.nlx.naturalLang.FullStop");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getBracketSentenceAccess().getBrackedSentencesFreeSentenceParserRuleCall_2_1_1_0());
						}
						lv_brackedSentences_4_0=ruleFreeSentence
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getBracketSentenceRule());
							}
							add(
								$current,
								"brackedSentences",
								lv_brackedSentences_4_0,
								"org.xixum.nlx.naturalLang.FreeSentence");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		(
			(
				(
					lv_separator_5_1=RULE_DOT
					{
						newLeafNode(lv_separator_5_1, grammarAccess.getBracketSentenceAccess().getSeparatorDOTTerminalRuleCall_3_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getBracketSentenceRule());
						}
						addWithLastConsumed(
							$current,
							"separator",
							lv_separator_5_1,
							"org.xixum.nlx.naturalLang.DOT");
					}
					    |
					lv_separator_5_2=RULE_FS
					{
						newLeafNode(lv_separator_5_2, grammarAccess.getBracketSentenceAccess().getSeparatorFSTerminalRuleCall_3_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getBracketSentenceRule());
						}
						addWithLastConsumed(
							$current,
							"separator",
							lv_separator_5_2,
							"org.xixum.nlx.naturalLang.FS");
					}
					    |
					{
						newCompositeNode(grammarAccess.getBracketSentenceAccess().getSeparatorFullStopParserRuleCall_3_0_2());
					}
					lv_separator_5_3=ruleFullStop
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBracketSentenceRule());
						}
						add(
							$current,
							"separator",
							lv_separator_5_3,
							"org.xixum.nlx.naturalLang.FullStop");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			this_SPACE_6=RULE_SPACE
			{
				newLeafNode(this_SPACE_6, grammarAccess.getBracketSentenceAccess().getSPACETerminalRuleCall_4_0());
			}
			    |
			this_NEWLINE_7=RULE_NEWLINE
			{
				newLeafNode(this_NEWLINE_7, grammarAccess.getBracketSentenceAccess().getNEWLINETerminalRuleCall_4_1());
			}
		)*
		(
			this_SPACE_8=RULE_SPACE
			{
				newLeafNode(this_SPACE_8, grammarAccess.getBracketSentenceAccess().getSPACETerminalRuleCall_5());
			}
		)?
		(
			((
				RULE_BR_CL
			)
			)=>
			(
				lv_close_9_0=RULE_BR_CL
				{
					newLeafNode(lv_close_9_0, grammarAccess.getBracketSentenceAccess().getCloseBR_CLTerminalRuleCall_6_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBracketSentenceRule());
					}
					setWithLastConsumed(
						$current,
						"close",
						lv_close_9_0,
						"org.xixum.nlx.naturalLang.BR_CL");
				}
			)
		)
	)
;

// Entry rule entryRuleExtBracketSentence
entryRuleExtBracketSentence returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExtBracketSentenceRule()); }
	iv_ruleExtBracketSentence=ruleExtBracketSentence
	{ $current=$iv_ruleExtBracketSentence.current; }
	EOF;

// Rule ExtBracketSentence
ruleExtBracketSentence returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getExtBracketSentenceAccess().getExtBracketSentenceAction_0(),
					$current);
			}
		)
		(
			(
				lv_open_1_0=RULE_EXBR_O
				{
					newLeafNode(lv_open_1_0, grammarAccess.getExtBracketSentenceAccess().getOpenEXBR_OTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getExtBracketSentenceRule());
					}
					setWithLastConsumed(
						$current,
						"open",
						lv_open_1_0,
						"org.xixum.nlx.naturalLang.EXBR_O");
				}
			)
		)
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getExtBracketSentenceAccess().getBrackedSentencesFreeSentenceParserRuleCall_2_0_0());
					}
					lv_brackedSentences_2_0=ruleFreeSentence
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getExtBracketSentenceRule());
						}
						add(
							$current,
							"brackedSentences",
							lv_brackedSentences_2_0,
							"org.xixum.nlx.naturalLang.FreeSentence");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getExtBracketSentenceAccess().getSeparatorFullStopParserRuleCall_2_1_0_0());
						}
						lv_separator_3_0=ruleFullStop
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getExtBracketSentenceRule());
							}
							add(
								$current,
								"separator",
								lv_separator_3_0,
								"org.xixum.nlx.naturalLang.FullStop");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getExtBracketSentenceAccess().getBrackedSentencesFreeSentenceParserRuleCall_2_1_1_0());
						}
						lv_brackedSentences_4_0=ruleFreeSentence
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getExtBracketSentenceRule());
							}
							add(
								$current,
								"brackedSentences",
								lv_brackedSentences_4_0,
								"org.xixum.nlx.naturalLang.FreeSentence");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		(
			(
				(
					lv_separator_5_1=RULE_DOT
					{
						newLeafNode(lv_separator_5_1, grammarAccess.getExtBracketSentenceAccess().getSeparatorDOTTerminalRuleCall_3_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getExtBracketSentenceRule());
						}
						addWithLastConsumed(
							$current,
							"separator",
							lv_separator_5_1,
							"org.xixum.nlx.naturalLang.DOT");
					}
					    |
					lv_separator_5_2=RULE_FS
					{
						newLeafNode(lv_separator_5_2, grammarAccess.getExtBracketSentenceAccess().getSeparatorFSTerminalRuleCall_3_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getExtBracketSentenceRule());
						}
						addWithLastConsumed(
							$current,
							"separator",
							lv_separator_5_2,
							"org.xixum.nlx.naturalLang.FS");
					}
					    |
					{
						newCompositeNode(grammarAccess.getExtBracketSentenceAccess().getSeparatorFullStopParserRuleCall_3_0_2());
					}
					lv_separator_5_3=ruleFullStop
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getExtBracketSentenceRule());
						}
						add(
							$current,
							"separator",
							lv_separator_5_3,
							"org.xixum.nlx.naturalLang.FullStop");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			this_SPACE_6=RULE_SPACE
			{
				newLeafNode(this_SPACE_6, grammarAccess.getExtBracketSentenceAccess().getSPACETerminalRuleCall_4());
			}
		)?
		(
			((
				RULE_EXBR_CL
			)
			)=>
			(
				lv_close_7_0=RULE_EXBR_CL
				{
					newLeafNode(lv_close_7_0, grammarAccess.getExtBracketSentenceAccess().getCloseEXBR_CLTerminalRuleCall_5_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getExtBracketSentenceRule());
					}
					setWithLastConsumed(
						$current,
						"close",
						lv_close_7_0,
						"org.xixum.nlx.naturalLang.EXBR_CL");
				}
			)
		)
	)
;

// Entry rule entryRuleExtBracketSentenceC
entryRuleExtBracketSentenceC returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExtBracketSentenceCRule()); }
	iv_ruleExtBracketSentenceC=ruleExtBracketSentenceC
	{ $current=$iv_ruleExtBracketSentenceC.current; }
	EOF;

// Rule ExtBracketSentenceC
ruleExtBracketSentenceC returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getExtBracketSentenceCAccess().getExtBracketSentenceAction_0(),
					$current);
			}
		)
		(
			(
				lv_open_1_0=RULE_EXBRC_O
				{
					newLeafNode(lv_open_1_0, grammarAccess.getExtBracketSentenceCAccess().getOpenEXBRC_OTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getExtBracketSentenceCRule());
					}
					setWithLastConsumed(
						$current,
						"open",
						lv_open_1_0,
						"org.xixum.nlx.naturalLang.EXBRC_O");
				}
			)
		)
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getExtBracketSentenceCAccess().getBrackedSentencesFreeSentenceParserRuleCall_2_0_0());
					}
					lv_brackedSentences_2_0=ruleFreeSentence
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getExtBracketSentenceCRule());
						}
						add(
							$current,
							"brackedSentences",
							lv_brackedSentences_2_0,
							"org.xixum.nlx.naturalLang.FreeSentence");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getExtBracketSentenceCAccess().getSeparatorFullStopParserRuleCall_2_1_0_0());
						}
						lv_separator_3_0=ruleFullStop
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getExtBracketSentenceCRule());
							}
							add(
								$current,
								"separator",
								lv_separator_3_0,
								"org.xixum.nlx.naturalLang.FullStop");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getExtBracketSentenceCAccess().getBrackedSentencesFreeSentenceParserRuleCall_2_1_1_0());
						}
						lv_brackedSentences_4_0=ruleFreeSentence
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getExtBracketSentenceCRule());
							}
							add(
								$current,
								"brackedSentences",
								lv_brackedSentences_4_0,
								"org.xixum.nlx.naturalLang.FreeSentence");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		(
			(
				(
					lv_separator_5_1=RULE_DOT
					{
						newLeafNode(lv_separator_5_1, grammarAccess.getExtBracketSentenceCAccess().getSeparatorDOTTerminalRuleCall_3_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getExtBracketSentenceCRule());
						}
						addWithLastConsumed(
							$current,
							"separator",
							lv_separator_5_1,
							"org.xixum.nlx.naturalLang.DOT");
					}
					    |
					lv_separator_5_2=RULE_FS
					{
						newLeafNode(lv_separator_5_2, grammarAccess.getExtBracketSentenceCAccess().getSeparatorFSTerminalRuleCall_3_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getExtBracketSentenceCRule());
						}
						addWithLastConsumed(
							$current,
							"separator",
							lv_separator_5_2,
							"org.xixum.nlx.naturalLang.FS");
					}
					    |
					{
						newCompositeNode(grammarAccess.getExtBracketSentenceCAccess().getSeparatorFullStopParserRuleCall_3_0_2());
					}
					lv_separator_5_3=ruleFullStop
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getExtBracketSentenceCRule());
						}
						add(
							$current,
							"separator",
							lv_separator_5_3,
							"org.xixum.nlx.naturalLang.FullStop");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			this_SPACE_6=RULE_SPACE
			{
				newLeafNode(this_SPACE_6, grammarAccess.getExtBracketSentenceCAccess().getSPACETerminalRuleCall_4());
			}
		)?
		(
			((
				RULE_EXBRC_CL
			)
			)=>
			(
				lv_close_7_0=RULE_EXBRC_CL
				{
					newLeafNode(lv_close_7_0, grammarAccess.getExtBracketSentenceCAccess().getCloseEXBRC_CLTerminalRuleCall_5_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getExtBracketSentenceCRule());
					}
					setWithLastConsumed(
						$current,
						"close",
						lv_close_7_0,
						"org.xixum.nlx.naturalLang.EXBRC_CL");
				}
			)
		)
	)
;

// Entry rule entryRuleFullStop
entryRuleFullStop returns [String current=null]:
	{ newCompositeNode(grammarAccess.getFullStopRule()); }
	iv_ruleFullStop=ruleFullStop
	{ $current=$iv_ruleFullStop.current.getText(); }
	EOF;

// Rule FullStop
ruleFullStop returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_FULL_STOP_NL_0=RULE_FULL_STOP_NL
		{
			$current.merge(this_FULL_STOP_NL_0);
		}
		{
			newLeafNode(this_FULL_STOP_NL_0, grammarAccess.getFullStopAccess().getFULL_STOP_NLTerminalRuleCall_0());
		}
		    |
		this_FULL_STOP_IM_1=RULE_FULL_STOP_IM
		{
			$current.merge(this_FULL_STOP_IM_1);
		}
		{
			newLeafNode(this_FULL_STOP_IM_1, grammarAccess.getFullStopAccess().getFULL_STOP_IMTerminalRuleCall_1());
		}
	)
;

// Entry rule entryRuleWord
entryRuleWord returns [EObject current=null]@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}:
	{ newCompositeNode(grammarAccess.getWordRule()); }
	iv_ruleWord=ruleWord
	{ $current=$iv_ruleWord.current; }
	EOF;
finally {
	myHiddenTokenState.restore();
}

// Rule Word
ruleWord returns [EObject current=null]
@init {
	enterRule();
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getWordAccess().getWordFragmentXParserRuleCall_0_0_0());
					}
					lv_word_0_0=ruleFragmentX
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getWordRule());
						}
						add(
							$current,
							"word",
							lv_word_0_0,
							"org.xixum.nlx.naturalLang.FragmentX");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					((
						(
							ruleFragment
						)
					)
					)=>
					(
						(
							{
								newCompositeNode(grammarAccess.getWordAccess().getWordFragmentParserRuleCall_0_1_0_0_0());
							}
							lv_word_1_0=ruleFragment
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getWordRule());
								}
								add(
									$current,
									"word",
									lv_word_1_0,
									"org.xixum.nlx.naturalLang.Fragment");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)
				(
					(
						(
							{
								newCompositeNode(grammarAccess.getWordAccess().getWordSeparatorsLParserRuleCall_0_1_1_0_0());
							}
							lv_word_2_0=ruleSeparatorsL
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getWordRule());
								}
								add(
									$current,
									"word",
									lv_word_2_0,
									"org.xixum.nlx.naturalLang.SeparatorsL");
								afterParserOrEnumRuleCall();
							}
						)
					)
					(
						(
							{
								newCompositeNode(grammarAccess.getWordAccess().getWordFragmentParserRuleCall_0_1_1_1_0());
							}
							lv_word_3_0=ruleFragment
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getWordRule());
								}
								add(
									$current,
									"word",
									lv_word_3_0,
									"org.xixum.nlx.naturalLang.Fragment");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)+
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getWordAccess().getWordSeparatorsLParserRuleCall_1_0());
				}
				lv_word_4_0=ruleSeparatorsL
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getWordRule());
					}
					add(
						$current,
						"word",
						lv_word_4_0,
						"org.xixum.nlx.naturalLang.SeparatorsL");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;
finally {
	myHiddenTokenState.restore();
}

// Entry rule entryRuleWordShort
entryRuleWordShort returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getWordShortRule()); }
	iv_ruleWordShort=ruleWordShort
	{ $current=$iv_ruleWordShort.current; }
	EOF;

// Rule WordShort
ruleWordShort returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getWordShortAccess().getWordAction_0(),
					$current);
			}
		)
		(
			(
				lv_word_1_0=RULE_ALPHA
				{
					newLeafNode(lv_word_1_0, grammarAccess.getWordShortAccess().getWordALPHATerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getWordShortRule());
					}
					addWithLastConsumed(
						$current,
						"word",
						lv_word_1_0,
						"org.xixum.nlx.naturalLang.ALPHA");
				}
			)
		)
	)
;

// Entry rule entryRuleFragmentX
entryRuleFragmentX returns [String current=null]:
	{ newCompositeNode(grammarAccess.getFragmentXRule()); }
	iv_ruleFragmentX=ruleFragmentX
	{ $current=$iv_ruleFragmentX.current.getText(); }
	EOF;

// Rule FragmentX
ruleFragmentX returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_ID_0=RULE_ID
		{
			$current.merge(this_ID_0);
		}
		{
			newLeafNode(this_ID_0, grammarAccess.getFragmentXAccess().getIDTerminalRuleCall_0());
		}
		    |
		this_ID_C_1=RULE_ID_C
		{
			$current.merge(this_ID_C_1);
		}
		{
			newLeafNode(this_ID_C_1, grammarAccess.getFragmentXAccess().getID_CTerminalRuleCall_1());
		}
		    |
		this_ALL_ALPHA_2=RULE_ALL_ALPHA
		{
			$current.merge(this_ALL_ALPHA_2);
		}
		{
			newLeafNode(this_ALL_ALPHA_2, grammarAccess.getFragmentXAccess().getALL_ALPHATerminalRuleCall_2());
		}
	)
;

// Entry rule entryRuleFragment
entryRuleFragment returns [String current=null]:
	{ newCompositeNode(grammarAccess.getFragmentRule()); }
	iv_ruleFragment=ruleFragment
	{ $current=$iv_ruleFragment.current.getText(); }
	EOF;

// Rule Fragment
ruleFragment returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getFragmentAccess().getFragmentXParserRuleCall_0());
		}
		this_FragmentX_0=ruleFragmentX
		{
			$current.merge(this_FragmentX_0);
		}
		{
			afterParserOrEnumRuleCall();
		}
		    |
		this_ALPHA_1=RULE_ALPHA
		{
			$current.merge(this_ALPHA_1);
		}
		{
			newLeafNode(this_ALPHA_1, grammarAccess.getFragmentAccess().getALPHATerminalRuleCall_1());
		}
	)
;

// Entry rule entryRuleAsterisk
entryRuleAsterisk returns [String current=null]:
	{ newCompositeNode(grammarAccess.getAsteriskRule()); }
	iv_ruleAsterisk=ruleAsterisk
	{ $current=$iv_ruleAsterisk.current.getText(); }
	EOF;

// Rule Asterisk
ruleAsterisk returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			this_MULTI_0=RULE_MULTI
			{
				$current.merge(this_MULTI_0);
			}
			{
				newLeafNode(this_MULTI_0, grammarAccess.getAsteriskAccess().getMULTITerminalRuleCall_0_0());
			}
			(
				this_MULTI_1=RULE_MULTI
				{
					$current.merge(this_MULTI_1);
				}
				{
					newLeafNode(this_MULTI_1, grammarAccess.getAsteriskAccess().getMULTITerminalRuleCall_0_1());
				}
			)?
		)
		    |
		(
			{
				newCompositeNode(grammarAccess.getAsteriskAccess().getFragmentParserRuleCall_1_0());
			}
			this_Fragment_2=ruleFragment
			{
				$current.merge(this_Fragment_2);
			}
			{
				afterParserOrEnumRuleCall();
			}
			this_MULTI_3=RULE_MULTI
			{
				$current.merge(this_MULTI_3);
			}
			{
				newLeafNode(this_MULTI_3, grammarAccess.getAsteriskAccess().getMULTITerminalRuleCall_1_1());
			}
		)
		    |
		(
			{
				newCompositeNode(grammarAccess.getAsteriskAccess().getItWordElParserRuleCall_2_0());
			}
			this_ItWordEl_4=ruleItWordEl
			{
				$current.merge(this_ItWordEl_4);
			}
			{
				afterParserOrEnumRuleCall();
			}
			this_MULTI_5=RULE_MULTI
			{
				$current.merge(this_MULTI_5);
			}
			{
				newLeafNode(this_MULTI_5, grammarAccess.getAsteriskAccess().getMULTITerminalRuleCall_2_1());
			}
		)
	)
;

// Entry rule entryRuleHashP
entryRuleHashP returns [String current=null]:
	{ newCompositeNode(grammarAccess.getHashPRule()); }
	iv_ruleHashP=ruleHashP
	{ $current=$iv_ruleHashP.current.getText(); }
	EOF;

// Rule HashP
ruleHashP returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	this_HASH_0=RULE_HASH
	{
		$current.merge(this_HASH_0);
	}
	{
		newLeafNode(this_HASH_0, grammarAccess.getHashPAccess().getHASHTerminalRuleCall());
	}
;

// Entry rule entryRuleItWord
entryRuleItWord returns [EObject current=null]@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}:
	{ newCompositeNode(grammarAccess.getItWordRule()); }
	iv_ruleItWord=ruleItWord
	{ $current=$iv_ruleItWord.current; }
	EOF;
finally {
	myHiddenTokenState.restore();
}

// Rule ItWord
ruleItWord returns [EObject current=null]
@init {
	enterRule();
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					(
						(
							(
								(
									{
										newCompositeNode(grammarAccess.getItWordAccess().getWordSeparatorsItParserRuleCall_0_0_0_0_0_0_0());
									}
									lv_word_0_0=ruleSeparatorsIt
									{
										if ($current==null) {
											$current = createModelElementForParent(grammarAccess.getItWordRule());
										}
										add(
											$current,
											"word",
											lv_word_0_0,
											"org.xixum.nlx.naturalLang.SeparatorsIt");
										afterParserOrEnumRuleCall();
									}
								)
							)+
							    |
							(
								(
									{
										newCompositeNode(grammarAccess.getItWordAccess().getWordHashPParserRuleCall_0_0_0_0_0_1_0());
									}
									lv_word_1_0=ruleHashP
									{
										if ($current==null) {
											$current = createModelElementForParent(grammarAccess.getItWordRule());
										}
										add(
											$current,
											"word",
											lv_word_1_0,
											"org.xixum.nlx.naturalLang.HashP");
										afterParserOrEnumRuleCall();
									}
								)
							)
							    |
							(
								(
									lv_word_2_0=RULE_MULTI
									{
										newLeafNode(lv_word_2_0, grammarAccess.getItWordAccess().getWordMULTITerminalRuleCall_0_0_0_0_0_2_0());
									}
									{
										if ($current==null) {
											$current = createModelElement(grammarAccess.getItWordRule());
										}
										addWithLastConsumed(
											$current,
											"word",
											lv_word_2_0,
											"org.xixum.nlx.naturalLang.MULTI");
									}
								)
							)
							    |
							(
								(
									lv_word_3_0=RULE_CURRENCY
									{
										newLeafNode(lv_word_3_0, grammarAccess.getItWordAccess().getWordCURRENCYTerminalRuleCall_0_0_0_0_0_3_0());
									}
									{
										if ($current==null) {
											$current = createModelElement(grammarAccess.getItWordRule());
										}
										addWithLastConsumed(
											$current,
											"word",
											lv_word_3_0,
											"org.xixum.nlx.naturalLang.CURRENCY");
									}
								)
							)
						)
						(
							(
								(
									{
										newCompositeNode(grammarAccess.getItWordAccess().getWordItWordElXxParserRuleCall_0_0_0_0_1_0_0());
									}
									lv_word_4_0=ruleItWordElXx
									{
										if ($current==null) {
											$current = createModelElementForParent(grammarAccess.getItWordRule());
										}
										add(
											$current,
											"word",
											lv_word_4_0,
											"org.xixum.nlx.naturalLang.ItWordElXx");
										afterParserOrEnumRuleCall();
									}
								)
							)
							    |
							(
								(
									{
										newCompositeNode(grammarAccess.getItWordAccess().getWordFragmentParserRuleCall_0_0_0_0_1_1_0());
									}
									lv_word_5_0=ruleFragment
									{
										if ($current==null) {
											$current = createModelElementForParent(grammarAccess.getItWordRule());
										}
										add(
											$current,
											"word",
											lv_word_5_0,
											"org.xixum.nlx.naturalLang.Fragment");
										afterParserOrEnumRuleCall();
									}
								)
							)
						)
					)
					    |
					(
						(
							(
								{
									newCompositeNode(grammarAccess.getItWordAccess().getWordItWordElParserRuleCall_0_0_0_1_0_0());
								}
								lv_word_6_0=ruleItWordEl
								{
									if ($current==null) {
										$current = createModelElementForParent(grammarAccess.getItWordRule());
									}
									add(
										$current,
										"word",
										lv_word_6_0,
										"org.xixum.nlx.naturalLang.ItWordEl");
									afterParserOrEnumRuleCall();
								}
							)
						)
						    |
						(
							(
								lv_word_7_0=RULE_CURL
								{
									newLeafNode(lv_word_7_0, grammarAccess.getItWordAccess().getWordCURLTerminalRuleCall_0_0_0_1_1_0());
								}
								{
									if ($current==null) {
										$current = createModelElement(grammarAccess.getItWordRule());
									}
									addWithLastConsumed(
										$current,
										"word",
										lv_word_7_0,
										"org.xixum.nlx.naturalLang.CURL");
								}
							)
						)
						    |
						(
							(
								(
									lv_word_8_0=RULE_ALL_ALPHA
									{
										newLeafNode(lv_word_8_0, grammarAccess.getItWordAccess().getWordALL_ALPHATerminalRuleCall_0_0_0_1_2_0_0());
									}
									{
										if ($current==null) {
											$current = createModelElement(grammarAccess.getItWordRule());
										}
										addWithLastConsumed(
											$current,
											"word",
											lv_word_8_0,
											"org.xixum.nlx.naturalLang.ALL_ALPHA");
									}
								)
							)
							(
								(
									lv_word_9_0=RULE_COLON
									{
										newLeafNode(lv_word_9_0, grammarAccess.getItWordAccess().getWordCOLONTerminalRuleCall_0_0_0_1_2_1_0());
									}
									{
										if ($current==null) {
											$current = createModelElement(grammarAccess.getItWordRule());
										}
										addWithLastConsumed(
											$current,
											"word",
											lv_word_9_0,
											"org.xixum.nlx.naturalLang.COLON");
									}
								)
							)
						)
					)
				)
				(
					(
						(
							{
								newCompositeNode(grammarAccess.getItWordAccess().getWordAllSepParserRuleCall_0_0_1_0_0());
							}
							lv_word_10_0=ruleAllSep
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getItWordRule());
								}
								add(
									$current,
									"word",
									lv_word_10_0,
									"org.xixum.nlx.naturalLang.AllSep");
								afterParserOrEnumRuleCall();
							}
						)
					)+
					(
						(
							{
								newCompositeNode(grammarAccess.getItWordAccess().getWordItWordElXxParserRuleCall_0_0_1_1_0());
							}
							lv_word_11_0=ruleItWordElXx
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getItWordRule());
								}
								add(
									$current,
									"word",
									lv_word_11_0,
									"org.xixum.nlx.naturalLang.ItWordElXx");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)*
			)
			    |
			(
				(
					(
						((
							ruleFragment
						)
						)=>
						(
							{
								newCompositeNode(grammarAccess.getItWordAccess().getWordFragmentParserRuleCall_0_1_0_0_0());
							}
							lv_word_12_0=ruleFragment
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getItWordRule());
								}
								add(
									$current,
									"word",
									lv_word_12_0,
									"org.xixum.nlx.naturalLang.Fragment");
								afterParserOrEnumRuleCall();
							}
						)
					)
					    |
					(
						(
							{
								newCompositeNode(grammarAccess.getItWordAccess().getWordAsteriskParserRuleCall_0_1_0_1_0());
							}
							lv_word_13_0=ruleAsterisk
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getItWordRule());
								}
								add(
									$current,
									"word",
									lv_word_13_0,
									"org.xixum.nlx.naturalLang.Asterisk");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)
				(
					(
						(
							(
								{
									newCompositeNode(grammarAccess.getItWordAccess().getWordSeparatorsItParserRuleCall_0_1_1_0_0_0());
								}
								lv_word_14_0=ruleSeparatorsIt
								{
									if ($current==null) {
										$current = createModelElementForParent(grammarAccess.getItWordRule());
									}
									add(
										$current,
										"word",
										lv_word_14_0,
										"org.xixum.nlx.naturalLang.SeparatorsIt");
									afterParserOrEnumRuleCall();
								}
							)
						)+
						(
							(
								{
									newCompositeNode(grammarAccess.getItWordAccess().getWordItWordElXxParserRuleCall_0_1_1_0_1_0());
								}
								lv_word_15_0=ruleItWordElXx
								{
									if ($current==null) {
										$current = createModelElementForParent(grammarAccess.getItWordRule());
									}
									add(
										$current,
										"word",
										lv_word_15_0,
										"org.xixum.nlx.naturalLang.ItWordElXx");
									afterParserOrEnumRuleCall();
								}
							)
						)
					)
					    |
					(
						(
							(
								{
									newCompositeNode(grammarAccess.getItWordAccess().getWordAllSepParserRuleCall_0_1_1_1_0_0());
								}
								lv_word_16_0=ruleAllSep
								{
									if ($current==null) {
										$current = createModelElementForParent(grammarAccess.getItWordRule());
									}
									add(
										$current,
										"word",
										lv_word_16_0,
										"org.xixum.nlx.naturalLang.AllSep");
									afterParserOrEnumRuleCall();
								}
							)
						)+
						(
							(
								{
									newCompositeNode(grammarAccess.getItWordAccess().getWordItWordElXParserRuleCall_0_1_1_1_1_0());
								}
								lv_word_17_0=ruleItWordElX
								{
									if ($current==null) {
										$current = createModelElementForParent(grammarAccess.getItWordRule());
									}
									add(
										$current,
										"word",
										lv_word_17_0,
										"org.xixum.nlx.naturalLang.ItWordElX");
									afterParserOrEnumRuleCall();
								}
							)
						)
					)
				)
				(
					(
						(
							{
								newCompositeNode(grammarAccess.getItWordAccess().getWordAllSepParserRuleCall_0_1_2_0_0());
							}
							lv_word_18_0=ruleAllSep
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getItWordRule());
								}
								add(
									$current,
									"word",
									lv_word_18_0,
									"org.xixum.nlx.naturalLang.AllSep");
								afterParserOrEnumRuleCall();
							}
						)
					)+
					(
						(
							{
								newCompositeNode(grammarAccess.getItWordAccess().getWordItWordElXxParserRuleCall_0_1_2_1_0());
							}
							lv_word_19_0=ruleItWordElXx
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getItWordRule());
								}
								add(
									$current,
									"word",
									lv_word_19_0,
									"org.xixum.nlx.naturalLang.ItWordElXx");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)*
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getItWordAccess().getWordAllSepParserRuleCall_1_0());
				}
				lv_word_20_0=ruleAllSep
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getItWordRule());
					}
					add(
						$current,
						"word",
						lv_word_20_0,
						"org.xixum.nlx.naturalLang.AllSep");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;
finally {
	myHiddenTokenState.restore();
}

// Entry rule entryRuleWhitespace
entryRuleWhitespace returns [String current=null]:
	{ newCompositeNode(grammarAccess.getWhitespaceRule()); }
	iv_ruleWhitespace=ruleWhitespace
	{ $current=$iv_ruleWhitespace.current.getText(); }
	EOF;

// Rule Whitespace
ruleWhitespace returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_SPACE_0=RULE_SPACE
		{
			$current.merge(this_SPACE_0);
		}
		{
			newLeafNode(this_SPACE_0, grammarAccess.getWhitespaceAccess().getSPACETerminalRuleCall_0());
		}
		    |
		(
			(
				this_SPACE_1=RULE_SPACE
				{
					$current.merge(this_SPACE_1);
				}
				{
					newLeafNode(this_SPACE_1, grammarAccess.getWhitespaceAccess().getSPACETerminalRuleCall_1_0());
				}
			)?
			this_NEWLINE_2=RULE_NEWLINE
			{
				$current.merge(this_NEWLINE_2);
			}
			{
				newLeafNode(this_NEWLINE_2, grammarAccess.getWhitespaceAccess().getNEWLINETerminalRuleCall_1_1());
			}
			(
				this_SPACE_3=RULE_SPACE
				{
					$current.merge(this_SPACE_3);
				}
				{
					newLeafNode(this_SPACE_3, grammarAccess.getWhitespaceAccess().getSPACETerminalRuleCall_1_2());
				}
			)?
		)
	)
;

// Entry rule entryRuleItWordEl
entryRuleItWordEl returns [String current=null]@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}:
	{ newCompositeNode(grammarAccess.getItWordElRule()); }
	iv_ruleItWordEl=ruleItWordEl
	{ $current=$iv_ruleItWordEl.current.getText(); }
	EOF;
finally {
	myHiddenTokenState.restore();
}

// Rule ItWordEl
ruleItWordEl returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}
@after {
	leaveRule();
}:
	(
		this_IT_ID_0=RULE_IT_ID
		{
			$current.merge(this_IT_ID_0);
		}
		{
			newLeafNode(this_IT_ID_0, grammarAccess.getItWordElAccess().getIT_IDTerminalRuleCall_0());
		}
		    |
		this_DOUBLE_DOT_1=RULE_DOUBLE_DOT
		{
			$current.merge(this_DOUBLE_DOT_1);
		}
		{
			newLeafNode(this_DOUBLE_DOT_1, grammarAccess.getItWordElAccess().getDOUBLE_DOTTerminalRuleCall_1());
		}
	)
;
finally {
	myHiddenTokenState.restore();
}

// Entry rule entryRuleItWordElurl
entryRuleItWordElurl returns [String current=null]@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}:
	{ newCompositeNode(grammarAccess.getItWordElurlRule()); }
	iv_ruleItWordElurl=ruleItWordElurl
	{ $current=$iv_ruleItWordElurl.current.getText(); }
	EOF;
finally {
	myHiddenTokenState.restore();
}

// Rule ItWordElurl
ruleItWordElurl returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}
@after {
	leaveRule();
}:
	(
		this_IT_ID_0=RULE_IT_ID
		{
			$current.merge(this_IT_ID_0);
		}
		{
			newLeafNode(this_IT_ID_0, grammarAccess.getItWordElurlAccess().getIT_IDTerminalRuleCall_0());
		}
		    |
		this_ID_ALL_1=RULE_ID_ALL
		{
			$current.merge(this_ID_ALL_1);
		}
		{
			newLeafNode(this_ID_ALL_1, grammarAccess.getItWordElurlAccess().getID_ALLTerminalRuleCall_1());
		}
		    |
		this_ID_2=RULE_ID
		{
			$current.merge(this_ID_2);
		}
		{
			newLeafNode(this_ID_2, grammarAccess.getItWordElurlAccess().getIDTerminalRuleCall_2());
		}
	)
;
finally {
	myHiddenTokenState.restore();
}

// Entry rule entryRuleItWordElX
entryRuleItWordElX returns [String current=null]@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}:
	{ newCompositeNode(grammarAccess.getItWordElXRule()); }
	iv_ruleItWordElX=ruleItWordElX
	{ $current=$iv_ruleItWordElX.current.getText(); }
	EOF;
finally {
	myHiddenTokenState.restore();
}

// Rule ItWordElX
ruleItWordElX returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getItWordElXAccess().getItWordElParserRuleCall_0());
		}
		this_ItWordEl_0=ruleItWordEl
		{
			$current.merge(this_ItWordEl_0);
		}
		{
			afterParserOrEnumRuleCall();
		}
		    |
		this_INT_1=RULE_INT
		{
			$current.merge(this_INT_1);
		}
		{
			newLeafNode(this_INT_1, grammarAccess.getItWordElXAccess().getINTTerminalRuleCall_1());
		}
		    |
		this_HEX_NUMBER_2=RULE_HEX_NUMBER
		{
			$current.merge(this_HEX_NUMBER_2);
		}
		{
			newLeafNode(this_HEX_NUMBER_2, grammarAccess.getItWordElXAccess().getHEX_NUMBERTerminalRuleCall_2());
		}
		    |
		this_ID_ALL_3=RULE_ID_ALL
		{
			$current.merge(this_ID_ALL_3);
		}
		{
			newLeafNode(this_ID_ALL_3, grammarAccess.getItWordElXAccess().getID_ALLTerminalRuleCall_3());
		}
	)
;
finally {
	myHiddenTokenState.restore();
}

// Entry rule entryRuleItWordElXx
entryRuleItWordElXx returns [String current=null]@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}:
	{ newCompositeNode(grammarAccess.getItWordElXxRule()); }
	iv_ruleItWordElXx=ruleItWordElXx
	{ $current=$iv_ruleItWordElXx.current.getText(); }
	EOF;
finally {
	myHiddenTokenState.restore();
}

// Rule ItWordElXx
ruleItWordElXx returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}
@after {
	leaveRule();
}:
	(
		this_ALL_ALPHA_0=RULE_ALL_ALPHA
		{
			$current.merge(this_ALL_ALPHA_0);
		}
		{
			newLeafNode(this_ALL_ALPHA_0, grammarAccess.getItWordElXxAccess().getALL_ALPHATerminalRuleCall_0());
		}
		    |
		this_ALPHA_1=RULE_ALPHA
		{
			$current.merge(this_ALPHA_1);
		}
		{
			newLeafNode(this_ALPHA_1, grammarAccess.getItWordElXxAccess().getALPHATerminalRuleCall_1());
		}
		    |
		(
			(ruleItWordElX)=>
			{
				newCompositeNode(grammarAccess.getItWordElXxAccess().getItWordElXParserRuleCall_2());
			}
			this_ItWordElX_2=ruleItWordElX
			{
				$current.merge(this_ItWordElX_2);
			}
			{
				afterParserOrEnumRuleCall();
			}
		)
		    |
		{
			newCompositeNode(grammarAccess.getItWordElXxAccess().getFragmentParserRuleCall_3());
		}
		this_Fragment_3=ruleFragment
		{
			$current.merge(this_Fragment_3);
		}
		{
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getItWordElXxAccess().getAsteriskParserRuleCall_4());
		}
		this_Asterisk_4=ruleAsterisk
		{
			$current.merge(this_Asterisk_4);
		}
		{
			afterParserOrEnumRuleCall();
		}
		    |
		this_ID_C_5=RULE_ID_C
		{
			$current.merge(this_ID_C_5);
		}
		{
			newLeafNode(this_ID_C_5, grammarAccess.getItWordElXxAccess().getID_CTerminalRuleCall_5());
		}
		    |
		this_CURL_6=RULE_CURL
		{
			$current.merge(this_CURL_6);
		}
		{
			newLeafNode(this_CURL_6, grammarAccess.getItWordElXxAccess().getCURLTerminalRuleCall_6());
		}
	)+
;
finally {
	myHiddenTokenState.restore();
}

// Entry rule entryRuleSeparatorsL
entryRuleSeparatorsL returns [String current=null]@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}:
	{ newCompositeNode(grammarAccess.getSeparatorsLRule()); }
	iv_ruleSeparatorsL=ruleSeparatorsL
	{ $current=$iv_ruleSeparatorsL.current.getText(); }
	EOF;
finally {
	myHiddenTokenState.restore();
}

// Rule SeparatorsL
ruleSeparatorsL returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}
@after {
	leaveRule();
}:
	(
		this_SLASH_0=RULE_SLASH
		{
			$current.merge(this_SLASH_0);
		}
		{
			newLeafNode(this_SLASH_0, grammarAccess.getSeparatorsLAccess().getSLASHTerminalRuleCall_0());
		}
		    |
		this_SEPARATORS_1=RULE_SEPARATORS
		{
			$current.merge(this_SEPARATORS_1);
		}
		{
			newLeafNode(this_SEPARATORS_1, grammarAccess.getSeparatorsLAccess().getSEPARATORSTerminalRuleCall_1());
		}
		    |
		this_DASH_2=RULE_DASH
		{
			$current.merge(this_DASH_2);
		}
		{
			newLeafNode(this_DASH_2, grammarAccess.getSeparatorsLAccess().getDASHTerminalRuleCall_2());
		}
		    |
		this_MINUS_3=RULE_MINUS
		{
			$current.merge(this_MINUS_3);
		}
		{
			newLeafNode(this_MINUS_3, grammarAccess.getSeparatorsLAccess().getMINUSTerminalRuleCall_3());
		}
	)
;
finally {
	myHiddenTokenState.restore();
}

// Entry rule entryRuleSeparatorsIt
entryRuleSeparatorsIt returns [String current=null]@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}:
	{ newCompositeNode(grammarAccess.getSeparatorsItRule()); }
	iv_ruleSeparatorsIt=ruleSeparatorsIt
	{ $current=$iv_ruleSeparatorsIt.current.getText(); }
	EOF;
finally {
	myHiddenTokenState.restore();
}

// Rule SeparatorsIt
ruleSeparatorsIt returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}
@after {
	leaveRule();
}:
	(
		this_DOT_0=RULE_DOT
		{
			$current.merge(this_DOT_0);
		}
		{
			newLeafNode(this_DOT_0, grammarAccess.getSeparatorsItAccess().getDOTTerminalRuleCall_0());
		}
		    |
		this_SEPARATORS_IT_1=RULE_SEPARATORS_IT
		{
			$current.merge(this_SEPARATORS_IT_1);
		}
		{
			newLeafNode(this_SEPARATORS_IT_1, grammarAccess.getSeparatorsItAccess().getSEPARATORS_ITTerminalRuleCall_1());
		}
		    |
		this_COLON_2=RULE_COLON
		{
			$current.merge(this_COLON_2);
		}
		{
			newLeafNode(this_COLON_2, grammarAccess.getSeparatorsItAccess().getCOLONTerminalRuleCall_2());
		}
	)
;
finally {
	myHiddenTokenState.restore();
}

// Entry rule entryRuleAllSep
entryRuleAllSep returns [String current=null]@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}:
	{ newCompositeNode(grammarAccess.getAllSepRule()); }
	iv_ruleAllSep=ruleAllSep
	{ $current=$iv_ruleAllSep.current.getText(); }
	EOF;
finally {
	myHiddenTokenState.restore();
}

// Rule AllSep
ruleAllSep returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getAllSepAccess().getSeparatorsItParserRuleCall_0());
		}
		this_SeparatorsIt_0=ruleSeparatorsIt
		{
			$current.merge(this_SeparatorsIt_0);
		}
		{
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getAllSepAccess().getSeparatorsLParserRuleCall_1());
		}
		this_SeparatorsL_1=ruleSeparatorsL
		{
			$current.merge(this_SeparatorsL_1);
		}
		{
			afterParserOrEnumRuleCall();
		}
	)
;
finally {
	myHiddenTokenState.restore();
}

// Entry rule entryRuleQuote
entryRuleQuote returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getQuoteRule()); }
	iv_ruleQuote=ruleQuote
	{ $current=$iv_ruleQuote.current; }
	EOF;

// Rule Quote
ruleQuote returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_quote_0_0=RULE_STRING
			{
				newLeafNode(lv_quote_0_0, grammarAccess.getQuoteAccess().getQuoteSTRINGTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getQuoteRule());
				}
				setWithLastConsumed(
					$current,
					"quote",
					lv_quote_0_0,
					"org.xixum.nlx.naturalLang.STRING");
			}
		)
	)
;

// Entry rule entryRuleUnit
entryRuleUnit returns [EObject current=null]@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}:
	{ newCompositeNode(grammarAccess.getUnitRule()); }
	iv_ruleUnit=ruleUnit
	{ $current=$iv_ruleUnit.current; }
	EOF;
finally {
	myHiddenTokenState.restore();
}

// Rule Unit
ruleUnit returns [EObject current=null]
@init {
	enterRule();
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_signature_0_0=RULE_MINUS
				{
					newLeafNode(lv_signature_0_0, grammarAccess.getUnitAccess().getSignatureMINUSTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getUnitRule());
					}
					setWithLastConsumed(
						$current,
						"signature",
						lv_signature_0_0,
						"org.xixum.nlx.naturalLang.MINUS");
				}
			)
		)?
		(
			((
				ruleNumber
			)
			)=>
			(
				{
					newCompositeNode(grammarAccess.getUnitAccess().getValueNumberParserRuleCall_1_0());
				}
				lv_value_1_0=ruleNumber
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getUnitRule());
					}
					add(
						$current,
						"value",
						lv_value_1_0,
						"org.xixum.nlx.naturalLang.Number");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				(
					lv_unit_2_0=RULE_CURRENCY
					{
						newLeafNode(lv_unit_2_0, grammarAccess.getUnitAccess().getUnitCURRENCYTerminalRuleCall_2_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getUnitRule());
						}
						setWithLastConsumed(
							$current,
							"unit",
							lv_unit_2_0,
							"org.xixum.nlx.naturalLang.CURRENCY");
					}
				)
			)
			    |
			(
				(
					lv_unit_3_0=RULE_ID
					{
						newLeafNode(lv_unit_3_0, grammarAccess.getUnitAccess().getUnitIDTerminalRuleCall_2_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getUnitRule());
						}
						setWithLastConsumed(
							$current,
							"unit",
							lv_unit_3_0,
							"org.xixum.nlx.naturalLang.ID");
					}
				)
			)
			    |
			(
				(
					lv_unit_4_0=RULE_PERCENT
					{
						newLeafNode(lv_unit_4_0, grammarAccess.getUnitAccess().getUnitPERCENTTerminalRuleCall_2_2_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getUnitRule());
						}
						setWithLastConsumed(
							$current,
							"unit",
							lv_unit_4_0,
							"org.xixum.nlx.naturalLang.PERCENT");
					}
				)
			)
		)?
	)
;
finally {
	myHiddenTokenState.restore();
}

// Entry rule entryRuleSimpleUnit
entryRuleSimpleUnit returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSimpleUnitRule()); }
	iv_ruleSimpleUnit=ruleSimpleUnit
	{ $current=$iv_ruleSimpleUnit.current; }
	EOF;

// Rule SimpleUnit
ruleSimpleUnit returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElement(
						grammarAccess.getSimpleUnitAccess().getUnitAction_0_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getSimpleUnitAccess().getValueChapterNumParserRuleCall_0_1_0());
					}
					lv_value_1_0=rulechapterNum
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSimpleUnitRule());
						}
						add(
							$current,
							"value",
							lv_value_1_0,
							"org.xixum.nlx.naturalLang.chapterNum");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getSimpleUnitAccess().getValueItNumParserRuleCall_1_0());
				}
				lv_value_2_0=ruleItNum
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSimpleUnitRule());
					}
					add(
						$current,
						"value",
						lv_value_2_0,
						"org.xixum.nlx.naturalLang.ItNum");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				lv_value_3_0=RULE_HEX_NUMBER
				{
					newLeafNode(lv_value_3_0, grammarAccess.getSimpleUnitAccess().getValueHEX_NUMBERTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSimpleUnitRule());
					}
					addWithLastConsumed(
						$current,
						"value",
						lv_value_3_0,
						"org.xixum.nlx.naturalLang.HEX_NUMBER");
				}
			)
		)
	)
;

// Entry rule entryRuleChapter_Unit_HI
entryRuleChapter_Unit_HI returns [EObject current=null]@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}:
	{ newCompositeNode(grammarAccess.getChapter_Unit_HIRule()); }
	iv_ruleChapter_Unit_HI=ruleChapter_Unit_HI
	{ $current=$iv_ruleChapter_Unit_HI.current; }
	EOF;
finally {
	myHiddenTokenState.restore();
}

// Rule Chapter_Unit_HI
ruleChapter_Unit_HI returns [EObject current=null]
@init {
	enterRule();
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getChapter_Unit_HIAccess().getUnitAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getChapter_Unit_HIAccess().getValueChapterNumParserRuleCall_1_0());
				}
				lv_value_1_0=rulechapterNum
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getChapter_Unit_HIRule());
					}
					add(
						$current,
						"value",
						lv_value_1_0,
						"org.xixum.nlx.naturalLang.chapterNum");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			this_SPACE_2=RULE_SPACE
			{
				newLeafNode(this_SPACE_2, grammarAccess.getChapter_Unit_HIAccess().getSPACETerminalRuleCall_2());
			}
		)?
	)
;
finally {
	myHiddenTokenState.restore();
}

// Entry rule entryRuleChapter_Unit_Low
entryRuleChapter_Unit_Low returns [EObject current=null]@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}:
	{ newCompositeNode(grammarAccess.getChapter_Unit_LowRule()); }
	iv_ruleChapter_Unit_Low=ruleChapter_Unit_Low
	{ $current=$iv_ruleChapter_Unit_Low.current; }
	EOF;
finally {
	myHiddenTokenState.restore();
}

// Rule Chapter_Unit_Low
ruleChapter_Unit_Low returns [EObject current=null]
@init {
	enterRule();
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getChapter_Unit_LowAccess().getUnitAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getChapter_Unit_LowAccess().getValueDecimalNumENParserRuleCall_1_0());
				}
				lv_value_1_0=ruledecimalNumEN
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getChapter_Unit_LowRule());
					}
					add(
						$current,
						"value",
						lv_value_1_0,
						"org.xixum.nlx.naturalLang.decimalNumEN");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			this_SPACE_2=RULE_SPACE
			{
				newLeafNode(this_SPACE_2, grammarAccess.getChapter_Unit_LowAccess().getSPACETerminalRuleCall_2());
			}
		)?
	)
;
finally {
	myHiddenTokenState.restore();
}

// Entry rule entryRuleHashNumber
entryRuleHashNumber returns [EObject current=null]@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}:
	{ newCompositeNode(grammarAccess.getHashNumberRule()); }
	iv_ruleHashNumber=ruleHashNumber
	{ $current=$iv_ruleHashNumber.current; }
	EOF;
finally {
	myHiddenTokenState.restore();
}

// Rule HashNumber
ruleHashNumber returns [EObject current=null]
@init {
	enterRule();
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getHashNumberAccess().getUnitAction_0(),
					$current);
			}
		)
		(
			(
				(
					lv_sign_1_1=RULE_HASH
					{
						newLeafNode(lv_sign_1_1, grammarAccess.getHashNumberAccess().getSignHASHTerminalRuleCall_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getHashNumberRule());
						}
						setWithLastConsumed(
							$current,
							"sign",
							lv_sign_1_1,
							"org.xixum.nlx.naturalLang.HASH");
					}
					    |
					lv_sign_1_2=RULE_PARAGR
					{
						newLeafNode(lv_sign_1_2, grammarAccess.getHashNumberAccess().getSignPARAGRTerminalRuleCall_1_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getHashNumberRule());
						}
						setWithLastConsumed(
							$current,
							"sign",
							lv_sign_1_2,
							"org.xixum.nlx.naturalLang.PARAGR");
					}
				)
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getHashNumberAccess().getValueNumberParserRuleCall_2_0());
				}
				lv_value_2_0=ruleNumber
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getHashNumberRule());
					}
					add(
						$current,
						"value",
						lv_value_2_0,
						"org.xixum.nlx.naturalLang.Number");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;
finally {
	myHiddenTokenState.restore();
}

// Entry rule entryRuleChapterAlpha
entryRuleChapterAlpha returns [EObject current=null]@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}:
	{ newCompositeNode(grammarAccess.getChapterAlphaRule()); }
	iv_ruleChapterAlpha=ruleChapterAlpha
	{ $current=$iv_ruleChapterAlpha.current; }
	EOF;
finally {
	myHiddenTokenState.restore();
}

// Rule ChapterAlpha
ruleChapterAlpha returns [EObject current=null]
@init {
	enterRule();
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getChapterAlphaAccess().getUnitAction_0(),
					$current);
			}
		)
		(
			(
				(
					lv_value_1_0=RULE_ID_C
					{
						newLeafNode(lv_value_1_0, grammarAccess.getChapterAlphaAccess().getValueID_CTerminalRuleCall_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getChapterAlphaRule());
						}
						addWithLastConsumed(
							$current,
							"value",
							lv_value_1_0,
							"org.xixum.nlx.naturalLang.ID_C");
					}
				)
			)
			    |
			(
				(
					lv_value_2_0=RULE_ALL_ALPHA
					{
						newLeafNode(lv_value_2_0, grammarAccess.getChapterAlphaAccess().getValueALL_ALPHATerminalRuleCall_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getChapterAlphaRule());
						}
						addWithLastConsumed(
							$current,
							"value",
							lv_value_2_0,
							"org.xixum.nlx.naturalLang.ALL_ALPHA");
					}
				)
			)
		)
		(
			(
				lv_value_3_0=RULE_DOT
				{
					newLeafNode(lv_value_3_0, grammarAccess.getChapterAlphaAccess().getValueDOTTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getChapterAlphaRule());
					}
					addWithLastConsumed(
						$current,
						"value",
						lv_value_3_0,
						"org.xixum.nlx.naturalLang.DOT");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getChapterAlphaAccess().getValueChapterIntermediateParserRuleCall_3_0());
				}
				lv_value_4_0=ruleChapterIntermediate
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getChapterAlphaRule());
					}
					add(
						$current,
						"value",
						lv_value_4_0,
						"org.xixum.nlx.naturalLang.ChapterIntermediate");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				(
					(
						lv_value_5_0=RULE_DOT
						{
							newLeafNode(lv_value_5_0, grammarAccess.getChapterAlphaAccess().getValueDOTTerminalRuleCall_4_0_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getChapterAlphaRule());
							}
							addWithLastConsumed(
								$current,
								"value",
								lv_value_5_0,
								"org.xixum.nlx.naturalLang.DOT");
						}
					)
				)
				    |
				(
					(
						lv_value_6_0=RULE_MINUS
						{
							newLeafNode(lv_value_6_0, grammarAccess.getChapterAlphaAccess().getValueMINUSTerminalRuleCall_4_0_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getChapterAlphaRule());
							}
							addWithLastConsumed(
								$current,
								"value",
								lv_value_6_0,
								"org.xixum.nlx.naturalLang.MINUS");
						}
					)
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getChapterAlphaAccess().getValueChapterIntermediateParserRuleCall_4_1_0());
					}
					lv_value_7_0=ruleChapterIntermediate
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getChapterAlphaRule());
						}
						add(
							$current,
							"value",
							lv_value_7_0,
							"org.xixum.nlx.naturalLang.ChapterIntermediate");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		this_SPACE_8=RULE_SPACE
		{
			newLeafNode(this_SPACE_8, grammarAccess.getChapterAlphaAccess().getSPACETerminalRuleCall_5());
		}
	)
;
finally {
	myHiddenTokenState.restore();
}

// Entry rule entryRuleChapterIntermediate
entryRuleChapterIntermediate returns [String current=null]@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}:
	{ newCompositeNode(grammarAccess.getChapterIntermediateRule()); }
	iv_ruleChapterIntermediate=ruleChapterIntermediate
	{ $current=$iv_ruleChapterIntermediate.current.getText(); }
	EOF;
finally {
	myHiddenTokenState.restore();
}

// Rule ChapterIntermediate
ruleChapterIntermediate returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}
@after {
	leaveRule();
}:
	(
		this_ID_C_0=RULE_ID_C
		{
			$current.merge(this_ID_C_0);
		}
		{
			newLeafNode(this_ID_C_0, grammarAccess.getChapterIntermediateAccess().getID_CTerminalRuleCall_0());
		}
		    |
		this_ID_ALL_1=RULE_ID_ALL
		{
			$current.merge(this_ID_ALL_1);
		}
		{
			newLeafNode(this_ID_ALL_1, grammarAccess.getChapterIntermediateAccess().getID_ALLTerminalRuleCall_1());
		}
		    |
		(
			(RULE_INT)=>
			this_INT_2=RULE_INT
			{
				$current.merge(this_INT_2);
			}
			{
				newLeafNode(this_INT_2, grammarAccess.getChapterIntermediateAccess().getINTTerminalRuleCall_2());
			}
		)
		    |
		this_IT_ID_3=RULE_IT_ID
		{
			$current.merge(this_IT_ID_3);
		}
		{
			newLeafNode(this_IT_ID_3, grammarAccess.getChapterIntermediateAccess().getIT_IDTerminalRuleCall_3());
		}
		    |
		this_ALL_ALPHA_4=RULE_ALL_ALPHA
		{
			$current.merge(this_ALL_ALPHA_4);
		}
		{
			newLeafNode(this_ALL_ALPHA_4, grammarAccess.getChapterIntermediateAccess().getALL_ALPHATerminalRuleCall_4());
		}
		    |
		this_ALPHA_5=RULE_ALPHA
		{
			$current.merge(this_ALPHA_5);
		}
		{
			newLeafNode(this_ALPHA_5, grammarAccess.getChapterIntermediateAccess().getALPHATerminalRuleCall_5());
		}
	)
;
finally {
	myHiddenTokenState.restore();
}

// Entry rule entryRuleSymbolsX
entryRuleSymbolsX returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSymbolsXRule()); }
	iv_ruleSymbolsX=ruleSymbolsX
	{ $current=$iv_ruleSymbolsX.current; }
	EOF;

// Rule SymbolsX
ruleSymbolsX returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getSymbolsXAccess().getSymbolsAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getSymbolsXAccess().getSymbolSpecialSymbolsParserRuleCall_1_0());
				}
				lv_symbol_1_0=ruleSpecialSymbols
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSymbolsXRule());
					}
					set(
						$current,
						"symbol",
						lv_symbol_1_0,
						"org.xixum.nlx.naturalLang.SpecialSymbols");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleSpecialCh
entryRuleSpecialCh returns [String current=null]:
	{ newCompositeNode(grammarAccess.getSpecialChRule()); }
	iv_ruleSpecialCh=ruleSpecialCh
	{ $current=$iv_ruleSpecialCh.current.getText(); }
	EOF;

// Rule SpecialCh
ruleSpecialCh returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_PERCENT_0=RULE_PERCENT
		{
			$current.merge(this_PERCENT_0);
		}
		{
			newLeafNode(this_PERCENT_0, grammarAccess.getSpecialChAccess().getPERCENTTerminalRuleCall_0());
		}
		    |
		this_DASH_1=RULE_DASH
		{
			$current.merge(this_DASH_1);
		}
		{
			newLeafNode(this_DASH_1, grammarAccess.getSpecialChAccess().getDASHTerminalRuleCall_1());
		}
		    |
		this_MINUS_2=RULE_MINUS
		{
			$current.merge(this_MINUS_2);
		}
		{
			newLeafNode(this_MINUS_2, grammarAccess.getSpecialChAccess().getMINUSTerminalRuleCall_2());
		}
		    |
		this_SEPARATORS_3=RULE_SEPARATORS
		{
			$current.merge(this_SEPARATORS_3);
		}
		{
			newLeafNode(this_SEPARATORS_3, grammarAccess.getSpecialChAccess().getSEPARATORSTerminalRuleCall_3());
		}
		    |
		this_MULTI_4=RULE_MULTI
		{
			$current.merge(this_MULTI_4);
		}
		{
			newLeafNode(this_MULTI_4, grammarAccess.getSpecialChAccess().getMULTITerminalRuleCall_4());
		}
	)
;

// Entry rule entryRuleSymbols
entryRuleSymbols returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSymbolsRule()); }
	iv_ruleSymbols=ruleSymbols
	{ $current=$iv_ruleSymbols.current; }
	EOF;

// Rule Symbols
ruleSymbols returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getSymbolsAccess().getSymbolsAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getSymbolsAccess().getSymbolSpecialChParserRuleCall_1_0());
				}
				lv_symbol_1_0=ruleSpecialCh
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSymbolsRule());
					}
					set(
						$current,
						"symbol",
						lv_symbol_1_0,
						"org.xixum.nlx.naturalLang.SpecialCh");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleShortcutGen
entryRuleShortcutGen returns [EObject current=null]@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}:
	{ newCompositeNode(grammarAccess.getShortcutGenRule()); }
	iv_ruleShortcutGen=ruleShortcutGen
	{ $current=$iv_ruleShortcutGen.current; }
	EOF;
finally {
	myHiddenTokenState.restore();
}

// Rule ShortcutGen
ruleShortcutGen returns [EObject current=null]
@init {
	enterRule();
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getShortcutGenAccess().getEStringAction_0(),
					$current);
			}
		)
		(
			(
				(
					lv_word_1_0=RULE_ALL_ALPHA
					{
						newLeafNode(lv_word_1_0, grammarAccess.getShortcutGenAccess().getWordALL_ALPHATerminalRuleCall_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getShortcutGenRule());
						}
						addWithLastConsumed(
							$current,
							"word",
							lv_word_1_0,
							"org.xixum.nlx.naturalLang.ALL_ALPHA");
					}
				)
			)
			    |
			(
				(
					lv_word_2_0=RULE_ALPHA
					{
						newLeafNode(lv_word_2_0, grammarAccess.getShortcutGenAccess().getWordALPHATerminalRuleCall_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getShortcutGenRule());
						}
						addWithLastConsumed(
							$current,
							"word",
							lv_word_2_0,
							"org.xixum.nlx.naturalLang.ALPHA");
					}
				)
			)
		)
		(
			(
				(
					lv_word_3_0=RULE_DOT
					{
						newLeafNode(lv_word_3_0, grammarAccess.getShortcutGenAccess().getWordDOTTerminalRuleCall_2_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getShortcutGenRule());
						}
						addWithLastConsumed(
							$current,
							"word",
							lv_word_3_0,
							"org.xixum.nlx.naturalLang.DOT");
					}
				)
			)
			(
				(
					(
						lv_word_4_0=RULE_ALL_ALPHA
						{
							newLeafNode(lv_word_4_0, grammarAccess.getShortcutGenAccess().getWordALL_ALPHATerminalRuleCall_2_1_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getShortcutGenRule());
							}
							addWithLastConsumed(
								$current,
								"word",
								lv_word_4_0,
								"org.xixum.nlx.naturalLang.ALL_ALPHA");
						}
					)
				)
				    |
				(
					(
						lv_word_5_0=RULE_ALPHA
						{
							newLeafNode(lv_word_5_0, grammarAccess.getShortcutGenAccess().getWordALPHATerminalRuleCall_2_1_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getShortcutGenRule());
							}
							addWithLastConsumed(
								$current,
								"word",
								lv_word_5_0,
								"org.xixum.nlx.naturalLang.ALPHA");
						}
					)
				)
			)
		)+
		(
			(
				lv_word_6_0=RULE_DOT
				{
					newLeafNode(lv_word_6_0, grammarAccess.getShortcutGenAccess().getWordDOTTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getShortcutGenRule());
					}
					addWithLastConsumed(
						$current,
						"word",
						lv_word_6_0,
						"org.xixum.nlx.naturalLang.DOT");
				}
			)
		)
	)
;
finally {
	myHiddenTokenState.restore();
}

// Entry rule entryRuleShortcutLib
entryRuleShortcutLib returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getShortcutLibRule()); }
	iv_ruleShortcutLib=ruleShortcutLib
	{ $current=$iv_ruleShortcutLib.current; }
	EOF;

// Rule ShortcutLib
ruleShortcutLib returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getShortcutLibAccess().getEStringAction_0(),
					$current);
			}
		)
		(
			(
				lv_shortcut_1_0=RULE_SHORTCUTS
				{
					newLeafNode(lv_shortcut_1_0, grammarAccess.getShortcutLibAccess().getShortcutSHORTCUTSTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getShortcutLibRule());
					}
					setWithLastConsumed(
						$current,
						"shortcut",
						lv_shortcut_1_0,
						"org.xixum.nlx.naturalLang.SHORTCUTS");
				}
			)
		)
	)
;

// Entry rule entryRuleShortCut
entryRuleShortCut returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getShortCutRule()); }
	iv_ruleShortCut=ruleShortCut
	{ $current=$iv_ruleShortCut.current; }
	EOF;

// Rule ShortCut
ruleShortCut returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getShortCutAccess().getShortcutShortcutLibParserRuleCall_0_0());
				}
				lv_shortcut_0_0=ruleShortcutLib
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getShortCutRule());
					}
					set(
						$current,
						"shortcut",
						lv_shortcut_0_0,
						"org.xixum.nlx.naturalLang.ShortcutLib");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getShortCutAccess().getShortcutShortcutGenParserRuleCall_1_0());
				}
				lv_shortcut_1_0=ruleShortcutGen
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getShortCutRule());
					}
					set(
						$current,
						"shortcut",
						lv_shortcut_1_0,
						"org.xixum.nlx.naturalLang.ShortcutGen");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleIgnoredText
entryRuleIgnoredText returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIgnoredTextRule()); }
	iv_ruleIgnoredText=ruleIgnoredText
	{ $current=$iv_ruleIgnoredText.current; }
	EOF;

// Rule IgnoredText
ruleIgnoredText returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_ignored_0_0=RULE_IGNORED
			{
				newLeafNode(lv_ignored_0_0, grammarAccess.getIgnoredTextAccess().getIgnoredIGNOREDTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getIgnoredTextRule());
				}
				setWithLastConsumed(
					$current,
					"ignored",
					lv_ignored_0_0,
					"org.xixum.nlx.naturalLang.IGNORED");
			}
		)
	)
;

// Entry rule entryRulesimpleNum
entryRulesimpleNum returns [String current=null]@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}:
	{ newCompositeNode(grammarAccess.getSimpleNumRule()); }
	iv_rulesimpleNum=rulesimpleNum
	{ $current=$iv_rulesimpleNum.current.getText(); }
	EOF;
finally {
	myHiddenTokenState.restore();
}

// Rule simpleNum
rulesimpleNum returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}
@after {
	leaveRule();
}:
	this_INT_0=RULE_INT
	{
		$current.merge(this_INT_0);
	}
	{
		newLeafNode(this_INT_0, grammarAccess.getSimpleNumAccess().getINTTerminalRuleCall());
	}
;
finally {
	myHiddenTokenState.restore();
}

// Entry rule entryRuleItNum
entryRuleItNum returns [String current=null]@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}:
	{ newCompositeNode(grammarAccess.getItNumRule()); }
	iv_ruleItNum=ruleItNum
	{ $current=$iv_ruleItNum.current.getText(); }
	EOF;
finally {
	myHiddenTokenState.restore();
}

// Rule ItNum
ruleItNum returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}
@after {
	leaveRule();
}:
	(
		this_INT_0=RULE_INT
		{
			$current.merge(this_INT_0);
		}
		{
			newLeafNode(this_INT_0, grammarAccess.getItNumAccess().getINTTerminalRuleCall_0());
		}
		(
			(
				this_SEPARATORS_IT_1=RULE_SEPARATORS_IT
				{
					$current.merge(this_SEPARATORS_IT_1);
				}
				{
					newLeafNode(this_SEPARATORS_IT_1, grammarAccess.getItNumAccess().getSEPARATORS_ITTerminalRuleCall_1_0_0());
				}
				    |
				this_COLON_2=RULE_COLON
				{
					$current.merge(this_COLON_2);
				}
				{
					newLeafNode(this_COLON_2, grammarAccess.getItNumAccess().getCOLONTerminalRuleCall_1_0_1());
				}
				    |
				this_DASH_3=RULE_DASH
				{
					$current.merge(this_DASH_3);
				}
				{
					newLeafNode(this_DASH_3, grammarAccess.getItNumAccess().getDASHTerminalRuleCall_1_0_2());
				}
				    |
				this_MINUS_4=RULE_MINUS
				{
					$current.merge(this_MINUS_4);
				}
				{
					newLeafNode(this_MINUS_4, grammarAccess.getItNumAccess().getMINUSTerminalRuleCall_1_0_3());
				}
				    |
				this_SLASH_5=RULE_SLASH
				{
					$current.merge(this_SLASH_5);
				}
				{
					newLeafNode(this_SLASH_5, grammarAccess.getItNumAccess().getSLASHTerminalRuleCall_1_0_4());
				}
			)
			this_INT_6=RULE_INT
			{
				$current.merge(this_INT_6);
			}
			{
				newLeafNode(this_INT_6, grammarAccess.getItNumAccess().getINTTerminalRuleCall_1_1());
			}
		)+
		(
			this_KM_7=RULE_KM
			{
				$current.merge(this_KM_7);
			}
			{
				newLeafNode(this_KM_7, grammarAccess.getItNumAccess().getKMTerminalRuleCall_2_0());
			}
			this_INT_8=RULE_INT
			{
				$current.merge(this_INT_8);
			}
			{
				newLeafNode(this_INT_8, grammarAccess.getItNumAccess().getINTTerminalRuleCall_2_1());
			}
		)?
	)
;
finally {
	myHiddenTokenState.restore();
}

// Entry rule entryRuleSpecialSymbols
entryRuleSpecialSymbols returns [String current=null]:
	{ newCompositeNode(grammarAccess.getSpecialSymbolsRule()); }
	iv_ruleSpecialSymbols=ruleSpecialSymbols
	{ $current=$iv_ruleSpecialSymbols.current.getText(); }
	EOF;

// Rule SpecialSymbols
ruleSpecialSymbols returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_SLASH_0=RULE_SLASH
		{
			$current.merge(this_SLASH_0);
		}
		{
			newLeafNode(this_SLASH_0, grammarAccess.getSpecialSymbolsAccess().getSLASHTerminalRuleCall_0());
		}
		    |
		this_OPERATORS_1=RULE_OPERATORS
		{
			$current.merge(this_OPERATORS_1);
		}
		{
			newLeafNode(this_OPERATORS_1, grammarAccess.getSpecialSymbolsAccess().getOPERATORSTerminalRuleCall_1());
		}
		    |
		this_ARROW_2=RULE_ARROW
		{
			$current.merge(this_ARROW_2);
		}
		{
			newLeafNode(this_ARROW_2, grammarAccess.getSpecialSymbolsAccess().getARROWTerminalRuleCall_2());
		}
		    |
		this_SMILEY_3=RULE_SMILEY
		{
			$current.merge(this_SMILEY_3);
		}
		{
			newLeafNode(this_SMILEY_3, grammarAccess.getSpecialSymbolsAccess().getSMILEYTerminalRuleCall_3());
		}
		    |
		this_TRIPLE_DOT_4=RULE_TRIPLE_DOT
		{
			$current.merge(this_TRIPLE_DOT_4);
		}
		{
			newLeafNode(this_TRIPLE_DOT_4, grammarAccess.getSpecialSymbolsAccess().getTRIPLE_DOTTerminalRuleCall_4());
		}
	)
;

// Entry rule entryRuledecimalNumEN
entryRuledecimalNumEN returns [String current=null]@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}:
	{ newCompositeNode(grammarAccess.getDecimalNumENRule()); }
	iv_ruledecimalNumEN=ruledecimalNumEN
	{ $current=$iv_ruledecimalNumEN.current.getText(); }
	EOF;
finally {
	myHiddenTokenState.restore();
}

// Rule decimalNumEN
ruledecimalNumEN returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}
@after {
	leaveRule();
}:
	(
		this_INT_0=RULE_INT
		{
			$current.merge(this_INT_0);
		}
		{
			newLeafNode(this_INT_0, grammarAccess.getDecimalNumENAccess().getINTTerminalRuleCall_0());
		}
		this_DOT_1=RULE_DOT
		{
			$current.merge(this_DOT_1);
		}
		{
			newLeafNode(this_DOT_1, grammarAccess.getDecimalNumENAccess().getDOTTerminalRuleCall_1());
		}
		this_INT_2=RULE_INT
		{
			$current.merge(this_INT_2);
		}
		{
			newLeafNode(this_INT_2, grammarAccess.getDecimalNumENAccess().getINTTerminalRuleCall_2());
		}
	)
;
finally {
	myHiddenTokenState.restore();
}

// Entry rule entryRuledecimalNumDE
entryRuledecimalNumDE returns [String current=null]@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}:
	{ newCompositeNode(grammarAccess.getDecimalNumDERule()); }
	iv_ruledecimalNumDE=ruledecimalNumDE
	{ $current=$iv_ruledecimalNumDE.current.getText(); }
	EOF;
finally {
	myHiddenTokenState.restore();
}

// Rule decimalNumDE
ruledecimalNumDE returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}
@after {
	leaveRule();
}:
	(
		this_INT_0=RULE_INT
		{
			$current.merge(this_INT_0);
		}
		{
			newLeafNode(this_INT_0, grammarAccess.getDecimalNumDEAccess().getINTTerminalRuleCall_0());
		}
		this_KM_1=RULE_KM
		{
			$current.merge(this_KM_1);
		}
		{
			newLeafNode(this_KM_1, grammarAccess.getDecimalNumDEAccess().getKMTerminalRuleCall_1());
		}
		this_INT_2=RULE_INT
		{
			$current.merge(this_INT_2);
		}
		{
			newLeafNode(this_INT_2, grammarAccess.getDecimalNumDEAccess().getINTTerminalRuleCall_2());
		}
	)
;
finally {
	myHiddenTokenState.restore();
}

// Entry rule entryRulechapterNum
entryRulechapterNum returns [String current=null]@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}:
	{ newCompositeNode(grammarAccess.getChapterNumRule()); }
	iv_rulechapterNum=rulechapterNum
	{ $current=$iv_rulechapterNum.current.getText(); }
	EOF;
finally {
	myHiddenTokenState.restore();
}

// Rule chapterNum
rulechapterNum returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}
@after {
	leaveRule();
}:
	(
		this_INT_0=RULE_INT
		{
			$current.merge(this_INT_0);
		}
		{
			newLeafNode(this_INT_0, grammarAccess.getChapterNumAccess().getINTTerminalRuleCall_0());
		}
		(
			this_DOT_1=RULE_DOT
			{
				$current.merge(this_DOT_1);
			}
			{
				newLeafNode(this_DOT_1, grammarAccess.getChapterNumAccess().getDOTTerminalRuleCall_1_0());
			}
			{
				newCompositeNode(grammarAccess.getChapterNumAccess().getChapterIntermediateParserRuleCall_1_1());
			}
			this_ChapterIntermediate_2=ruleChapterIntermediate
			{
				$current.merge(this_ChapterIntermediate_2);
			}
			{
				afterParserOrEnumRuleCall();
			}
		)+
	)
;
finally {
	myHiddenTokenState.restore();
}

// Entry rule entryRuleNumber
entryRuleNumber returns [String current=null]@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}:
	{ newCompositeNode(grammarAccess.getNumberRule()); }
	iv_ruleNumber=ruleNumber
	{ $current=$iv_ruleNumber.current.getText(); }
	EOF;
finally {
	myHiddenTokenState.restore();
}

// Rule Number
ruleNumber returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getNumberAccess().getSimpleNumParserRuleCall_0());
		}
		this_simpleNum_0=rulesimpleNum
		{
			$current.merge(this_simpleNum_0);
		}
		{
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getNumberAccess().getDecimalNumENParserRuleCall_1());
		}
		this_decimalNumEN_1=ruledecimalNumEN
		{
			$current.merge(this_decimalNumEN_1);
		}
		{
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getNumberAccess().getDecimalNumDEParserRuleCall_2());
		}
		this_decimalNumDE_2=ruledecimalNumDE
		{
			$current.merge(this_decimalNumDE_2);
		}
		{
			afterParserOrEnumRuleCall();
		}
	)
;
finally {
	myHiddenTokenState.restore();
}

// Entry rule entryRuleUrlAdress
entryRuleUrlAdress returns [EObject current=null]@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}:
	{ newCompositeNode(grammarAccess.getUrlAdressRule()); }
	iv_ruleUrlAdress=ruleUrlAdress
	{ $current=$iv_ruleUrlAdress.current; }
	EOF;
finally {
	myHiddenTokenState.restore();
}

// Rule UrlAdress
ruleUrlAdress returns [EObject current=null]
@init {
	enterRule();
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_protocol_0_0=RULE_URL_PROTOCOL
				{
					newLeafNode(lv_protocol_0_0, grammarAccess.getUrlAdressAccess().getProtocolURL_PROTOCOLTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getUrlAdressRule());
					}
					setWithLastConsumed(
						$current,
						"protocol",
						lv_protocol_0_0,
						"org.xixum.nlx.naturalLang.URL_PROTOCOL");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getUrlAdressAccess().getUrlItWordElurlParserRuleCall_1_0());
				}
				lv_url_1_0=ruleItWordElurl
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getUrlAdressRule());
					}
					add(
						$current,
						"url",
						lv_url_1_0,
						"org.xixum.nlx.naturalLang.ItWordElurl");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getUrlAdressAccess().getUrlAllSepParserRuleCall_2_0_0());
					}
					lv_url_2_0=ruleAllSep
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getUrlAdressRule());
						}
						add(
							$current,
							"url",
							lv_url_2_0,
							"org.xixum.nlx.naturalLang.AllSep");
						afterParserOrEnumRuleCall();
					}
				)
			)+
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getUrlAdressAccess().getUrlItWordElXxParserRuleCall_2_1_0_0());
						}
						lv_url_3_0=ruleItWordElXx
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getUrlAdressRule());
							}
							add(
								$current,
								"url",
								lv_url_3_0,
								"org.xixum.nlx.naturalLang.ItWordElXx");
							afterParserOrEnumRuleCall();
						}
					)
				)
				    |
				(
					(
						{
							newCompositeNode(grammarAccess.getUrlAdressAccess().getUrlSimpleNumParserRuleCall_2_1_1_0());
						}
						lv_url_4_0=rulesimpleNum
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getUrlAdressRule());
							}
							add(
								$current,
								"url",
								lv_url_4_0,
								"org.xixum.nlx.naturalLang.simpleNum");
							afterParserOrEnumRuleCall();
						}
					)
				)
				    |
				(
					(
						{
							newCompositeNode(grammarAccess.getUrlAdressAccess().getUrlFragmentParserRuleCall_2_1_2_0());
						}
						lv_url_5_0=ruleFragment
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getUrlAdressRule());
							}
							add(
								$current,
								"url",
								lv_url_5_0,
								"org.xixum.nlx.naturalLang.Fragment");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getUrlAdressAccess().getUrlAllSepParserRuleCall_3_0());
				}
				lv_url_6_0=ruleAllSep
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getUrlAdressRule());
					}
					add(
						$current,
						"url",
						lv_url_6_0,
						"org.xixum.nlx.naturalLang.AllSep");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;
finally {
	myHiddenTokenState.restore();
}

// Entry rule entryRuleEmailAT
entryRuleEmailAT returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEmailATRule()); }
	iv_ruleEmailAT=ruleEmailAT
	{ $current=$iv_ruleEmailAT.current; }
	EOF;

// Rule EmailAT
ruleEmailAT returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_email_0_0=RULE_AT
			{
				newLeafNode(lv_email_0_0, grammarAccess.getEmailATAccess().getEmailATTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getEmailATRule());
				}
				addWithLastConsumed(
					$current,
					"email",
					lv_email_0_0,
					"org.xixum.nlx.naturalLang.AT");
			}
		)
	)
;

// Entry rule entryRuleMailAdress
entryRuleMailAdress returns [EObject current=null]@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}:
	{ newCompositeNode(grammarAccess.getMailAdressRule()); }
	iv_ruleMailAdress=ruleMailAdress
	{ $current=$iv_ruleMailAdress.current; }
	EOF;
finally {
	myHiddenTokenState.restore();
}

// Rule MailAdress
ruleMailAdress returns [EObject current=null]
@init {
	enterRule();
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getMailAdressAccess().getEmailItWordParserRuleCall_0_0_0());
					}
					lv_email_0_0=ruleItWord
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMailAdressRule());
						}
						add(
							$current,
							"email",
							lv_email_0_0,
							"org.xixum.nlx.naturalLang.ItWord");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getMailAdressAccess().getEmailWordParserRuleCall_0_1_0());
					}
					lv_email_1_0=ruleWord
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMailAdressRule());
						}
						add(
							$current,
							"email",
							lv_email_1_0,
							"org.xixum.nlx.naturalLang.Word");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getMailAdressAccess().getEmailEmailATParserRuleCall_1_0());
				}
				lv_email_2_0=ruleEmailAT
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMailAdressRule());
					}
					add(
						$current,
						"email",
						lv_email_2_0,
						"org.xixum.nlx.naturalLang.EmailAT");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			((
				ruleItWord
			)
			)=>
			(
				{
					newCompositeNode(grammarAccess.getMailAdressAccess().getEmailItWordParserRuleCall_2_0());
				}
				lv_email_3_0=ruleItWord
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMailAdressRule());
					}
					add(
						$current,
						"email",
						lv_email_3_0,
						"org.xixum.nlx.naturalLang.ItWord");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;
finally {
	myHiddenTokenState.restore();
}

// Entry rule entryRuleFormula
entryRuleFormula returns [EObject current=null]@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}:
	{ newCompositeNode(grammarAccess.getFormulaRule()); }
	iv_ruleFormula=ruleFormula
	{ $current=$iv_ruleFormula.current; }
	EOF;
finally {
	myHiddenTokenState.restore();
}

// Rule Formula
ruleFormula returns [EObject current=null]
@init {
	enterRule();
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getFormulaAccess().getNameEmailATParserRuleCall_0_0());
				}
				lv_name_0_0=ruleEmailAT
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFormulaRule());
					}
					add(
						$current,
						"name",
						lv_name_0_0,
						"org.xixum.nlx.naturalLang.EmailAT");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getFormulaAccess().getNameItWordParserRuleCall_1_0_0());
					}
					lv_name_1_0=ruleItWord
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFormulaRule());
						}
						add(
							$current,
							"name",
							lv_name_1_0,
							"org.xixum.nlx.naturalLang.ItWord");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getFormulaAccess().getNameWordParserRuleCall_1_1_0());
					}
					lv_name_2_0=ruleWord
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFormulaRule());
						}
						add(
							$current,
							"name",
							lv_name_2_0,
							"org.xixum.nlx.naturalLang.Word");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getFormulaAccess().getParametersBracketSentenceParserRuleCall_2_0());
				}
				lv_parameters_3_0=ruleBracketSentence
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFormulaRule());
					}
					add(
						$current,
						"parameters",
						lv_parameters_3_0,
						"org.xixum.nlx.naturalLang.BracketSentence");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			this_DOT_4=RULE_DOT
			{
				newLeafNode(this_DOT_4, grammarAccess.getFormulaAccess().getDOTTerminalRuleCall_3_0());
			}
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getFormulaAccess().getNameItWordParserRuleCall_3_1_0_0());
						}
						lv_name_5_0=ruleItWord
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getFormulaRule());
							}
							add(
								$current,
								"name",
								lv_name_5_0,
								"org.xixum.nlx.naturalLang.ItWord");
							afterParserOrEnumRuleCall();
						}
					)
				)
				    |
				(
					(
						{
							newCompositeNode(grammarAccess.getFormulaAccess().getNameWordParserRuleCall_3_1_1_0());
						}
						lv_name_6_0=ruleWord
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getFormulaRule());
							}
							add(
								$current,
								"name",
								lv_name_6_0,
								"org.xixum.nlx.naturalLang.Word");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getFormulaAccess().getParametersBracketSentenceParserRuleCall_3_2_0());
					}
					lv_parameters_7_0=ruleBracketSentence
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFormulaRule());
						}
						add(
							$current,
							"parameters",
							lv_parameters_7_0,
							"org.xixum.nlx.naturalLang.BracketSentence");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;
finally {
	myHiddenTokenState.restore();
}

// Entry rule entryRuleArray
entryRuleArray returns [EObject current=null]@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}:
	{ newCompositeNode(grammarAccess.getArrayRule()); }
	iv_ruleArray=ruleArray
	{ $current=$iv_ruleArray.current; }
	EOF;
finally {
	myHiddenTokenState.restore();
}

// Rule Array
ruleArray returns [EObject current=null]
@init {
	enterRule();
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getArrayAccess().getNameItWordParserRuleCall_0_0_0());
					}
					lv_name_0_0=ruleItWord
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getArrayRule());
						}
						add(
							$current,
							"name",
							lv_name_0_0,
							"org.xixum.nlx.naturalLang.ItWord");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getArrayAccess().getNameWordParserRuleCall_0_1_0());
					}
					lv_name_1_0=ruleWord
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getArrayRule());
						}
						add(
							$current,
							"name",
							lv_name_1_0,
							"org.xixum.nlx.naturalLang.Word");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getArrayAccess().getParametersExtBracketSentenceParserRuleCall_1_0());
				}
				lv_parameters_2_0=ruleExtBracketSentence
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getArrayRule());
					}
					add(
						$current,
						"parameters",
						lv_parameters_2_0,
						"org.xixum.nlx.naturalLang.ExtBracketSentence");
					afterParserOrEnumRuleCall();
				}
			)
		)+
	)
;
finally {
	myHiddenTokenState.restore();
}

// Entry rule entryRuleNew_Line
entryRuleNew_Line returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNew_LineRule()); }
	iv_ruleNew_Line=ruleNew_Line
	{ $current=$iv_ruleNew_Line.current; }
	EOF;

// Rule New_Line
ruleNew_Line returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getNew_LineAccess().getElementsAction_0(),
					$current);
			}
		)
		(
			(
				lv_nl_1_0=RULE_NEWLINE
				{
					newLeafNode(lv_nl_1_0, grammarAccess.getNew_LineAccess().getNlNEWLINETerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getNew_LineRule());
					}
					setWithLastConsumed(
						$current,
						"nl",
						lv_nl_1_0,
						"org.xixum.nlx.naturalLang.NEWLINE");
				}
			)
		)
	)
;

RULE_COLON : ':';

RULE_DOT : '.';

RULE_FS : (RULE_DOT|';'|RULE_INTERJ|RULE_COLON);

fragment RULE_INTERJ : ('?'|'!');

RULE_KM : ',';

RULE_SPACE : (' '|'\t')+;

RULE_NEWLINE : '\r'? '\n';

RULE_CURL : '~';

RULE_OPERATORS : (RULE_AND RULE_AND?|RULE_EXP|RULE_PLUS|RULE_CURL|RULE_EQUAL RULE_EQUAL?|RULE_INTERJ RULE_EQUAL|RULE_GT RULE_EQUAL|RULE_SM RULE_EQUAL|RULE_GT RULE_GT|RULE_SM RULE_SM);

fragment RULE_WS : (RULE_NEWLINE|RULE_SPACE);

RULE_ARROW : (RULE_MINUS* RULE_GT|RULE_SM RULE_MINUS*);

RULE_FULL_STOP_IM : RULE_FS RULE_SPACE;

RULE_FULL_STOP_NL : RULE_FS RULE_SPACE? RULE_NEWLINE;

RULE_END : EOF;

RULE_KOMMA : RULE_KM RULE_WS;

RULE_ALPHA : ('a'..'z'|'\u00E4'..'\u00FC'|'\u00DF'|'\u00E0'..'\u00F9'|'\u00E1'..'\u00FA');

RULE_ALL_ALPHA : (RULE_ALPHA_CAPITAL|RULE_ALPHA);

RULE_ID : RULE_ALL_ALPHA RULE_ALPHA+;

RULE_ID_C : RULE_ALPHA_CAPITAL RULE_ALPHA_CAPITAL+;

RULE_AT : '@';

RULE_HEX_NUMBER : '0x' ('0'..'9'|'A'..'F')+;

fragment RULE_ALPHA_CAPITAL : ('A'..'Z'|'\u00C4'..'\u00DC'|'\u00C0'..'\u00D9'|'\u00C1'..'\u00DA');

fragment RULE_ALPHA_NUMERIC : (RULE_ALPHA|'0'..'9');

RULE_MINUS : '-';

RULE_PERCENT : '%';

fragment RULE_EQUAL : '=';

fragment RULE_EXP : '^';

fragment RULE_AND : '&';

RULE_SEPARATORS : ('\''|'\u2019'|'\u00B4'|RULE_BACKSLASH);

RULE_SEPARATORS_IT : (RULE_UNDERSCORE|RULE_COLON);

RULE_INT : ('0'..'9')+;

fragment RULE_UNDERSCORE : '_';

RULE_BR_O : '(';

RULE_EXBR_O : '[';

RULE_EXBRC_O : '{';

RULE_BR_CL : ')';

RULE_EXBR_CL : ']';

RULE_EXBRC_CL : '}';

fragment RULE_GT : '>';

fragment RULE_SM : '<';

RULE_IT_ID : (RULE_ALPHA|RULE_ALPHA_CAPITAL) RULE_ALPHA_NUMERIC_C+;

RULE_DOUBLE_DOT : RULE_DOT RULE_DOT;

RULE_TRIPLE_DOT : RULE_DOT RULE_DOT RULE_DOT;

fragment RULE_DECORATIONS : (RULE_EQUAL RULE_EQUAL RULE_EQUAL+|RULE_MULTI RULE_MULTI RULE_MULTI+|RULE_HASH RULE_HASH+|RULE_DOT RULE_DOT RULE_DOT RULE_DOT+|RULE_MINUS RULE_MINUS+);

RULE_IGNORED : RULE_DECORATIONS;

RULE_SMILEY : (':)'|':-)'|';)'|';-)'|':D'|':('|':-('|'\u00A9'|'\u00AE');

RULE_URL_PROTOCOL : ('http' 's'? '://'|'ftp://'|'ssh://'|'svn://');

RULE_HASH : '#';

RULE_PARAGR : '\u00A7';

fragment RULE_PLUS : '+';

RULE_MULTI : '*';

RULE_DASH : ('\u2013'|'\u2014');

RULE_HORIZ_SEP : '|';

fragment RULE_BACKSLASH : '\\';

RULE_SLASH : '/';

RULE_CURRENCY : ('$'|'\u20AC');

fragment RULE_ALPHA_NUMERIC_C : (RULE_ALPHA_CAPITAL|RULE_ALPHA_NUMERIC);

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\u201C' ( options {greedy=false;} : . )*'\u201D');

RULE_TABLE_LINE : RULE_PLUS RULE_MINUS+ (RULE_PLUS RULE_MINUS+)* RULE_PLUS;

RULE_ID_ALL : RULE_ALPHA_NUMERIC_C RULE_ALPHA_NUMERIC_C+;

RULE_SHORTCUTS : ('etc.'|'asf.'|'bzw.'|'bspw.'|'Evtl.'|'evtl.'|'Inc.'|'inc.'|'Bspw.'|'Bzw.'|'Dr.'|'Prof.'|'Ing.'|'med.');

RULE_ANY_OTHER : .;
